{-# OPTIONS --rewriting #-}

module S4WithTerms where

open import Prelude public


--------------------------------------------------------------------------------
--
-- Syntax


-- Type variables
data TVar : Set where
  tvar : String โ TVar

{-# COMPILE GHC TVar = data TVar (TVar) #-}

injtvar : โ {sโ sโ} โ tvar sโ โก tvar sโ โ sโ โก sโ
injtvar refl = refl

_โโแตฅ_ : (xโ xโ : TVar) โ Dec (xโ โก xโ)
tvar sโ โโแตฅ tvar sโ = mapDec (tvar &_) injtvar (sโ โโ sโ)

instance
  tvarIsString : IsString TVar
  tvarIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ tvar s
      }


-- Types
infixl 9 _โง_
infixr 7 _โ_
data Tp : Set where
  แตแต  : (x : TVar) โ Tp
  _โ_ : (A B : Tp) โ Tp
  _โง_ : (A B : Tp) โ Tp
  ๐   : Tp
  โก_  : (A : Tp) โ Tp

{-# COMPILE GHC Tp = data Tp (TV | (:=>) | (:&&) | Top | Box) #-}

instance
  typeIsString : IsString Tp
  typeIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ แตแต (tvar s)
      }


injแตแต : โ {xโ xโ} โ แตแต xโ โก แตแต xโ โ xโ โก xโ
injแตแต refl = refl

injโโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โ Bโ โก Aโ โ Bโ โ Aโ โก Aโ
injโโ refl = refl

injโโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โ Bโ โก Aโ โ Bโ โ Bโ โก Bโ
injโโ refl = refl

injโงโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โง Bโ โก Aโ โง Bโ โ Aโ โก Aโ
injโงโ refl = refl

injโงโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โง Bโ โก Aโ โง Bโ โ Bโ โก Bโ
injโงโ refl = refl

injโก : โ {Aโ Aโ} โ โก Aโ โก โก Aโ โ Aโ โก Aโ
injโก refl = refl


_โโโ_ : (Aโ Aโ : Tp) โ Dec (Aโ โก Aโ)

แตแต xโ โโโ แตแต xโ     with xโ โโแตฅ xโ
...                 | yes refl = yes refl
...                 | no xโโขxโ = no (xโโขxโ โ injแตแต)
แตแต xโ โโโ (Aโ โ Bโ) = no (ฮป ())
แตแต xโ โโโ (Aโ โง Bโ) = no (ฮป ())
แตแต xโ โโโ ๐         = no (ฮป ())
แตแต xโ โโโ (โก Aโ)    = no (ฮป ())

(Aโ โ Bโ) โโโ แตแต xโ     = no (ฮป ())
(Aโ โ Bโ) โโโ (Aโ โ Bโ) with Aโ โโโ Aโ | Bโ โโโ Bโ
...                     | yes refl | yes refl = yes refl
...                     | yes refl | no BโโขBโ = no (BโโขBโ โ injโโ)
...                     | no AโโขAโ | _        = no (AโโขAโ โ injโโ)
(Aโ โ Bโ) โโโ (Aโ โง Bโ) = no (ฮป ())
(Aโ โ Bโ) โโโ ๐         = no (ฮป ())
(Aโ โ Bโ) โโโ (โก Aโ)    = no (ฮป ())

(Aโ โง Bโ) โโโ แตแต xโ     = no (ฮป ())
(Aโ โง Bโ) โโโ (Aโ โ Bโ) = no (ฮป ())
(Aโ โง Bโ) โโโ (Aโ โง Bโ) with Aโ โโโ Aโ | Bโ โโโ Bโ
...                     | yes refl | yes refl = yes refl
...                     | yes refl | no BโโขBโ = no (BโโขBโ โ injโงโ)
...                     | no AโโขAโ | _        = no (AโโขAโ โ injโงโ)
(Aโ โง Bโ) โโโ ๐         = no (ฮป ())
(Aโ โง Bโ) โโโ (โก Aโ)    = no (ฮป ())

๐ โโโ แตแต xโ     = no (ฮป ())
๐ โโโ (Aโ โ Bโ) = no (ฮป ())
๐ โโโ (Aโ โง Bโ) = no (ฮป ())
๐ โโโ ๐         = yes refl
๐ โโโ (โก Aโ)    = no (ฮป ())

(โก Aโ) โโโ แตแต xโ     = no (ฮป ())
(โก Aโ) โโโ (Aโ โ Bโ) = no (ฮป ())
(โก Aโ) โโโ (Aโ โง Bโ) = no (ฮป ())
(โก Aโ) โโโ ๐         = no (ฮป ())
(โก Aโ) โโโ (โก Aโ)    with Aโ โโโ Aโ
...                  | yes refl = yes refl
...                  | no AโโขAโ = no (AโโขAโ โ injโก)


-- Modal variables
data MVar : Set where
  mvar : String โ MVar

{-# COMPILE GHC MVar = data MVar (MVar) #-}

injmvar : โ {sโ sโ} โ mvar sโ โก mvar sโ โ sโ โก sโ
injmvar refl = refl

_โโแตฅ_ : (xโ xโ : MVar) โ Dec (xโ โก xโ)
mvar sโ โโแตฅ mvar sโ = mapDec (mvar &_) injmvar (sโ โโ sโ)

instance
  mvarIsString : IsString MVar
  mvarIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ mvar s
      }


-- Variables
data Var : Set where
  var : String โ Var

{-# COMPILE GHC Var = data Var (Var) #-}

injvar : โ {sโ sโ} โ var sโ โก var sโ โ sโ โก sโ
injvar refl = refl

_โแตฅ_ : (xโ xโ : Var) โ Dec (xโ โก xโ)
var sโ โแตฅ var sโ = mapDec (var &_) injvar (sโ โโ sโ)

instance
  varIsString : IsString Var
  varIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ var s
      }


-- Terms
infixl 10 _โฆ_
data Tm : Set where
  แตแต     : (x : MVar) โ Tm
  แต      : (x : Var) โ Tm
  ฦ_โ_   : (x : Var) (M : Tm) โ Tm
  _$_    : (M N : Tm) โ Tm
  _,_    : (M N : Tm) โ Tm
  ฯโ     : (M : Tm) โ Tm
  ฯโ     : (M : Tm) โ Tm
  tt     : Tm
  โ_โ    : (M : Tm) โ Tm
  โ_โ_โ_ : (M : Tm) (x : MVar) (N : Tm) โ Tm
  _โฆ_    : (M : Tm) (A : Tp) โ Tm

{-# COMPILE GHC Tm = data Tm (MV | RV | Lam | (:$) | (:,) | Pi1 | Pi2 | TT | Quo | Unq | (:::)) #-}

injแตแต : โ {xโ xโ} โ แตแต xโ โก แตแต xโ โ xโ โก xโ
injแตแต refl = refl

injแต : โ {xโ xโ} โ แต xโ โก แต xโ โ xโ โก xโ
injแต refl = refl

injฦโ : โ {xโ xโ Mโ Mโ} โ ฦ xโ โ Mโ โก ฦ xโ โ Mโ โ xโ โก xโ
injฦโ refl = refl

injฦโ : โ {xโ xโ Mโ Mโ} โ ฦ xโ โ Mโ โก ฦ xโ โ Mโ โ Mโ โก Mโ
injฦโ refl = refl

inj$โ : โ {Mโ Mโ Nโ Nโ} โ Mโ $ Nโ โก Mโ $ Nโ โ Mโ โก Mโ
inj$โ refl = refl

inj$โ : โ {Mโ Mโ Nโ Nโ} โ Mโ $ Nโ โก Mโ $ Nโ โ Nโ โก Nโ
inj$โ refl = refl

inj,โ : โ {Mโ Mโ Nโ Nโ} โ Mโ Tm., Nโ โก Mโ , Nโ โ Mโ โก Mโ
inj,โ refl = refl

inj,โ : โ {Mโ Mโ Nโ Nโ} โ Mโ Tm., Nโ โก Mโ , Nโ โ Nโ โก Nโ
inj,โ refl = refl

injฯโ : โ {Mโ Mโ} โ ฯโ Mโ โก ฯโ Mโ โ Mโ โก Mโ
injฯโ refl = refl

injฯโ : โ {Mโ Mโ} โ ฯโ Mโ โก ฯโ Mโ โ Mโ โก Mโ
injฯโ refl = refl

injโโ : โ {Mโ Mโ} โ โ Mโ โ โก โ Mโ โ โ Mโ โก Mโ
injโโ refl = refl

injโโโ : โ {Mโ Mโ xโ xโ Nโ Nโ} โ โ Mโ โ xโ โ Nโ โก โ Mโ โ xโ โ Nโ โ Mโ โก Mโ
injโโโ refl = refl

injโโโ : โ {Mโ Mโ xโ xโ Nโ Nโ} โ โ Mโ โ xโ โ Nโ โก โ Mโ โ xโ โ Nโ โ xโ โก xโ
injโโโ refl = refl

injโโโ : โ {Mโ Mโ xโ xโ Nโ Nโ} โ โ Mโ โ xโ โ Nโ โก โ Mโ โ xโ โ Nโ โ Nโ โก Nโ
injโโโ refl = refl

injโฆโ : โ {Mโ Mโ Aโ Aโ} โ Mโ โฆ Aโ โก Mโ โฆ Aโ โ Mโ โก Mโ
injโฆโ refl = refl

injโฆโ : โ {Mโ Mโ Aโ Aโ} โ Mโ โฆ Aโ โก Mโ โฆ Aโ โ Aโ โก Aโ
injโฆโ refl = refl


_โโโ_ : (Mโ Mโ : Tm) โ Dec (Mโ โก Mโ)

(แตแต xโ) โโโ (แตแต xโ)          with xโ โโแตฅ xโ
...                          | yes refl = yes refl
...                          | no xโโขxโ = no (xโโขxโ โ injแตแต)
(แตแต xโ) โโโ (แต xโ)           = no (ฮป ())
(แตแต xโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(แตแต xโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(แตแต xโ) โโโ (Mโ , โโ)        = no (ฮป ())
(แตแต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(แตแต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(แตแต xโ) โโโ tt               = no (ฮป ())
(แตแต xโ) โโโ โ Mโ โ           = no (ฮป ())
(แตแต xโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(แตแต xโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(แต xโ) โโโ (แตแต xโ)          = no (ฮป ())
(แต xโ) โโโ (แต xโ)           with xโ โแตฅ xโ
...                         | yes refl = yes refl
...                         | no xโโขxโ = no (xโโขxโ โ injแต)
(แต xโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(แต xโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(แต xโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(แต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(แต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(แต xโ) โโโ tt               = no (ฮป ())
(แต xโ) โโโ โ Mโ โ           = no (ฮป ())
(แต xโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(แต xโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(ฦ xโ โ Mโ) โโโ (แตแต xโ)          = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (แต xโ)           = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (ฦ xโ โ Mโ)      with xโ โแตฅ xโ | Mโ โโโ Mโ
...                              | yes refl | yes refl = yes refl
...                              | yes refl | no MโโขMโ = no (MโโขMโ โ injฦโ)
...                              | no xโโขxโ | _        = no (xโโขxโ โ injฦโ)
(ฦ xโ โ Mโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฦ xโ โ Mโ) โโโ tt               = no (ฮป ())
(ฦ xโ โ Mโ) โโโ โ Mโ โ           = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(Mโ $ Nโ) โโโ (แตแต xโ)          = no (ฮป ())
(Mโ $ Nโ) โโโ (แต xโ)           = no (ฮป ())
(Mโ $ Nโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(Mโ $ Nโ) โโโ (Mโ $ Nโ)        with Mโ โโโ Mโ | Nโ โโโ Nโ
...                            | yes refl | yes refl = yes refl
...                            | yes refl | no NโโขNโ = no (NโโขNโ โ inj$โ)
...                            | no MโโขMโ | _        = no (MโโขMโ โ inj$โ)
(Mโ $ Nโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(Mโ $ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ $ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ $ Nโ) โโโ tt               = no (ฮป ())
(Mโ $ Nโ) โโโ โ Mโ โ           = no (ฮป ())
(Mโ $ Nโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(Mโ $ Nโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(Mโ , Nโ) โโโ (แตแต xโ)          = no (ฮป ())
(Mโ , Nโ) โโโ (แต xโ)           = no (ฮป ())
(Mโ , Nโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(Mโ , Nโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(Mโ , Nโ) โโโ (Mโ , Nโ)        with Mโ โโโ Mโ | Nโ โโโ Nโ
...                            | yes refl | yes refl = yes refl
...                            | yes refl | no NโโขNโ = no (NโโขNโ โ inj,โ)
...                            | no MโโขMโ | _        = no (MโโขMโ โ inj,โ)
(Mโ , Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ , Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ , Nโ) โโโ tt               = no (ฮป ())
(Mโ , Nโ) โโโ โ Mโ โ           = no (ฮป ())
(Mโ , Nโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(Mโ , Nโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(ฯโ Mโ) โโโ (แตแต xโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (แต xโ)           = no (ฮป ())
(ฯโ Mโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (ฯโ Mโ)          with Mโ โโโ Mโ
...                          | yes refl = yes refl
...                          | no MโโขMโ = no (MโโขMโ โ injฯโ)
(ฯโ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฯโ Mโ) โโโ tt               = no (ฮป ())
(ฯโ Mโ) โโโ โ Mโ โ           = no (ฮป ())
(ฯโ Mโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(ฯโ Mโ) โโโ (แตแต xโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (แต xโ)           = no (ฮป ())
(ฯโ Mโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (ฯโ Mโ)          with Mโ โโโ Mโ
...                          | yes refl = yes refl
...                          | no MโโขMโ = no (MโโขMโ โ injฯโ)
(ฯโ Mโ) โโโ tt               = no (ฮป ())
(ฯโ Mโ) โโโ โ Mโ โ           = no (ฮป ())
(ฯโ Mโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

tt โโโ (แตแต xโ)          = no (ฮป ())
tt โโโ (แต xโ)           = no (ฮป ())
tt โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
tt โโโ (Mโ $ Nโ)        = no (ฮป ())
tt โโโ (Mโ , Nโ)        = no (ฮป ())
tt โโโ (ฯโ Mโ)          = no (ฮป ())
tt โโโ (ฯโ Mโ)          = no (ฮป ())
tt โโโ tt               = yes refl
tt โโโ โ Mโ โ           = no (ฮป ())
tt โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
tt โโโ (Mโ โฆ Aโ)        = no (ฮป ())

โ Mโ โ โโโ (แตแต xโ)          = no (ฮป ())
โ Mโ โ โโโ (แต xโ)           = no (ฮป ())
โ Mโ โ โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
โ Mโ โ โโโ (Mโ $ Nโ)        = no (ฮป ())
โ Mโ โ โโโ (Mโ , Nโ)        = no (ฮป ())
โ Mโ โ โโโ (ฯโ Mโ)          = no (ฮป ())
โ Mโ โ โโโ (ฯโ Mโ)          = no (ฮป ())
โ Mโ โ โโโ tt               = no (ฮป ())
โ Mโ โ โโโ โ Mโ โ           with Mโ โโโ Mโ
...                         | yes refl = yes refl
...                         | no MโโขMโ = no (MโโขMโ โ injโโ)
โ Mโ โ โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
โ Mโ โ โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(โ Mโ โ xโ โ Nโ) โโโ (แตแต xโ)          = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (แต xโ)           = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ tt               = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ โ Mโ โ           = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (โ Mโ โ xโ โ Nโ) with Mโ โโโ Mโ | xโ โโแตฅ xโ | Nโ โโโ Nโ
...                                   | yes refl | yes refl | yes refl = yes refl
...                                   | yes refl | yes refl | no NโโขNโ = no (NโโขNโ โ injโโโ)
...                                   | yes refl | no xโโขxโ | _        = no (xโโขxโ โ injโโโ)
...                                   | no MโโขMโ | _        | _        = no (MโโขMโ โ injโโโ)
(โ Mโ โ xโ โ Nโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(Mโ โฆ Aโ) โโโ (แตแต xโ)          = no (ฮป ())
(Mโ โฆ Aโ) โโโ (แต xโ)           = no (ฮป ())
(Mโ โฆ Aโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(Mโ โฆ Aโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(Mโ โฆ Aโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(Mโ โฆ Aโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ โฆ Aโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ โฆ Aโ) โโโ tt               = no (ฮป ())
(Mโ โฆ Aโ) โโโ โ Mโ โ           = no (ฮป ())
(Mโ โฆ Aโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(Mโ โฆ Aโ) โโโ (Mโ โฆ Aโ)        with Mโ โโโ Mโ | Aโ โโโ Aโ
...                            | yes refl | yes refl = yes refl
...                            | yes refl | no AโโขAโ = no (AโโขAโ โ injโฆโ)
...                            | no MโโขMโ | _        = no (MโโขMโ โ injโฆโ)


-- Contexts
Cx : Set
Cx = List (MVar ร Tp) ร List (Var ร Tp)


-- Syntactic entailment
infix 3 _โข_โท_
data _โข_โท_ : Cx โ Tm โ Tp โ Set
  where
    แตแต_#_  : โ {A ฮ ฮ} โ (x : MVar) (i : ฮ โ (x , A))
                       โ ฮ โ ฮ โข แตแต x โท A

    แต_#_   : โ {A ฮ ฮ} โ (x : Var) (i : ฮ โ (x , A))
                       โ ฮ โ ฮ โข แต x โท A

    ฦ_โ_   : โ {A B M ฮ ฮ} โ (x : Var) (๐ : ฮ โ ฮ , (x , A) โข M โท B)
                           โ ฮ โ ฮ โข ฦ x โ M โท A โ B

    _$_    : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A โ B) (โฐ : ฮ โ ฮ โข N โท A)
                             โ ฮ โ ฮ โข M $ N โท B

    _,_    : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A) (โฐ : ฮ โ ฮ โข N โท B)
                             โ ฮ โ ฮ โข M , N โท A โง B

    ฯโ     : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A โง B)
                           โ ฮ โ ฮ โข ฯโ M โท A

    ฯโ     : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A โง B)
                           โ ฮ โ ฮ โข ฯโ M โท B

    tt     : โ {ฮ ฮ} โ ฮ โ ฮ โข tt โท ๐

    โ_โ    : โ {A M ฮ ฮ} โ (๐ : ฮ โ โ โข M โท A)
                         โ ฮ โ ฮ โข โ M โ โท โก A

    โ_โ_โ_ : โ {A C M N ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท โก A) (x : MVar) (โฐ : ฮ , (x , A) โ ฮ โข N โท C)
                             โ ฮ โ ฮ โข โ M โ x โ N โท C


-- Normal and neutral forms
-- NOTE: Almost the same as bidirectional syntactic entailment
mutual
  infix 3 _โขโโ_โท_
  data _โขโโ_โท_ : Cx โ Tm โ Tp โ Set
    where
      ฦ_โ_   : โ {A B M ฮ ฮ} โ (x : Var) (๐ : ฮ โ ฮ , (x , A) โขโโ M โท B)
                             โ ฮ โ ฮ โขโโ ฦ x โ M โท A โ B

      _,_    : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A) (โฐ : ฮ โ ฮ โขโโ N โท B)
                               โ ฮ โ ฮ โขโโ M , N โท A โง B

      tt     : โ {ฮ ฮ} โ ฮ โ ฮ โขโโ tt โท ๐

      -- NOTE: We treat the premise of the โก introduction rule specially,
      -- in order to represet non-normal forms  (Davies-Pfenning 2001, p. 12)
      โ_โ    : โ {A M ฮ ฮ} โ (๐ : ฮ โ โ โข M โท A)
                           โ ฮ โ ฮ โขโโ โ M โ โท โก A

      โ_โ_โ_ : โ {A C M N ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท โก A) (x : MVar) (โฐ : ฮ , (x , A) โ ฮ โขโโ N โท C)
                               โ ฮ โ ฮ โขโโ โ M โ x โ N โท C

      -- NOTE: We embed neutral forms only at base types,
      -- in order to guarantee that normal forms are ฮฒฮท-normal
      โฟแต     : โ {x M ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท แตแต x)
                           โ ฮ โ ฮ โขโโ M โท แตแต x

  infix 3 _โขโโ_โท_
  data _โขโโ_โท_ : Cx โ Tm โ Tp โ Set
    where
      แตแต_#_ : โ {A ฮ ฮ} โ (x : MVar) (i : ฮ โ (x , A))
                        โ ฮ โ ฮ โขโโ แตแต x โท A

      แต_#_  : โ {A ฮ ฮ} โ (x : Var) (i : ฮ โ (x , A))
                        โ ฮ โ ฮ โขโโ แต x โท A

      _$_   : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A โ B) (โฐ : ฮ โ ฮ โขโโ N โท A)
                              โ ฮ โ ฮ โขโโ M $ N โท B

      ฯโ    : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A โง B)
                            โ ฮ โ ฮ โขโโ ฯโ M โท A

      ฯโ    : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A โง B)
                            โ ฮ โ ฮ โขโโ ฯโ M โท B


mutual
  embโโ : โ {ฮ ฮ M A} โ ฮ โ ฮ โขโโ M โท A โ ฮ โ ฮ โข M โท A
  embโโ (ฦ x โ ๐)     = ฦ x โ embโโ ๐
  embโโ (๐ , โฐ)       = embโโ ๐ , embโโ โฐ
  embโโ tt            = tt
  embโโ (โ ๐ โ)       = โ ๐ โ
  embโโ (โ ๐ โ x โ โฐ) = โ embโโ ๐ โ x โ embโโ โฐ
  embโโ (โฟแต ๐)        = embโโ ๐

  embโโ : โ {ฮ ฮ M A} โ ฮ โ ฮ โขโโ M โท A โ ฮ โ ฮ โข M โท A
  embโโ (แตแต x # i) = แตแต x # i
  embโโ (แต x # i)  = แต x # i
  embโโ (๐ $ โฐ)    = embโโ ๐ $ embโโ โฐ
  embโโ (ฯโ ๐)     = ฯโ (embโโ ๐)
  embโโ (ฯโ ๐)     = ฯโ (embโโ ๐)


--------------------------------------------------------------------------------
--
-- Renaming


แตren : โ {ฮ ฮโฒ ฮ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โข M โท A
                      โ ฮโฒ โ ฮ โข M โท A
แตren ฮท (แตแต x # i)    = แตแต x # lookupแตฃ ฮท i
แตren ฮท (แต x # i)     = แต x #  i
แตren ฮท (ฦ x โ ๐)     = ฦ x โ แตren ฮท ๐
แตren ฮท (๐ $ โฐ)       = แตren ฮท ๐ $ แตren ฮท โฐ
แตren ฮท (๐ , โฐ)       = แตren ฮท ๐ , แตren ฮท โฐ
แตren ฮท (ฯโ ๐)        = ฯโ (แตren ฮท ๐)
แตren ฮท (ฯโ ๐)        = ฯโ (แตren ฮท ๐)
แตren ฮท tt            = tt
แตren ฮท โ ๐ โ         = โ แตren ฮท ๐ โ
แตren ฮท (โ ๐ โ x โ โฐ) = โ แตren ฮท ๐ โ x โ แตren (lift ฮท) โฐ

ren : โ {ฮ ฮ ฮโฒ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โข M โท A
                     โ ฮ โ ฮโฒ โข M โท A
ren ฮท (แตแต x # i)    = แตแต x # i
ren ฮท (แต x # i)     = แต x # lookupแตฃ ฮท i
ren ฮท (ฦ x โ ๐)     = ฦ x โ ren (lift ฮท) ๐
ren ฮท (๐ $ โฐ)       = ren ฮท ๐ $ ren ฮท โฐ
ren ฮท (๐ , โฐ)       = ren ฮท ๐ , ren ฮท โฐ
ren ฮท (ฯโ ๐)        = ฯโ (ren ฮท ๐)
ren ฮท (ฯโ ๐)        = ฯโ (ren ฮท ๐)
ren ฮท tt            = tt
ren ฮท โ ๐ โ         = โ ๐ โ
ren ฮท (โ ๐ โ x โ โฐ) = โ ren ฮท ๐ โ x โ ren ฮท โฐ


mutual
  แตrenโโ : โ {ฮ ฮโฒ ฮ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮโฒ โ ฮ โขโโ M โท A
  แตrenโโ ฮท (ฦ x โ ๐)     = ฦ x โ แตrenโโ ฮท ๐
  แตrenโโ ฮท (๐ , โฐ)       = แตrenโโ ฮท ๐ , แตrenโโ ฮท โฐ
  แตrenโโ ฮท tt            = tt
  แตrenโโ ฮท โ ๐ โ         = โ แตren ฮท ๐ โ
  แตrenโโ ฮท (โ ๐ โ x โ โฐ) = โ แตrenโโ ฮท ๐ โ x โ แตrenโโ (lift ฮท) โฐ
  แตrenโโ ฮท (โฟแต ๐)        = โฟแต (แตrenโโ ฮท ๐)

  แตrenโโ : โ {ฮ ฮโฒ ฮ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮโฒ โ ฮ โขโโ M โท A
  แตrenโโ ฮท (แตแต x # i) = แตแต x # lookupแตฃ ฮท i
  แตrenโโ ฮท (แต x # i)  = แต x # i
  แตrenโโ ฮท (๐ $ โฐ)    = แตrenโโ ฮท ๐ $ แตrenโโ ฮท โฐ
  แตrenโโ ฮท (ฯโ ๐)     = ฯโ (แตrenโโ ฮท ๐)
  แตrenโโ ฮท (ฯโ ๐)     = ฯโ (แตrenโโ ฮท ๐)


mutual
  renโโ : โ {ฮ ฮ ฮโฒ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                         โ ฮ โ ฮโฒ โขโโ M โท A
  renโโ ฮท (ฦ x โ ๐)     = ฦ x โ renโโ (lift ฮท) ๐
  renโโ ฮท (๐ , โฐ)       = renโโ ฮท ๐ , renโโ ฮท โฐ
  renโโ ฮท tt            = tt
  renโโ ฮท โ ๐ โ         = โ ๐ โ
  renโโ ฮท (โ ๐ โ x โ โฐ) = โ renโโ ฮท ๐ โ x โ renโโ ฮท โฐ
  renโโ ฮท (โฟแต ๐)        = โฟแต (renโโ ฮท ๐)

  renโโ : โ {ฮ ฮ ฮโฒ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                         โ ฮ โ ฮโฒ โขโโ M โท A
  renโโ ฮท (แตแต x # i) = แตแต x # i
  renโโ ฮท (แต x # i)  = แต x # lookupแตฃ ฮท i
  renโโ ฮท (๐ $ โฐ)    = renโโ ฮท ๐ $ renโโ ฮท โฐ
  renโโ ฮท (ฯโ ๐)     = ฯโ (renโโ ฮท ๐)
  renโโ ฮท (ฯโ ๐)     = ฯโ (renโโ ฮท ๐)


renโโยฒ : โ {ฮ ฮโฒ ฮ ฮโฒ M A} โ ฮโฒ โ ฮโฒ โยฒ ฮ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                           โ ฮโฒ โ ฮโฒ โขโโ M โท A
renโโยฒ ฮท ๐ = (แตrenโโ (projโ ฮท) โ renโโ (projโ ฮท)) ๐

renโโยฒ : โ {ฮ ฮโฒ ฮ ฮโฒ M A} โ ฮโฒ โ ฮโฒ โยฒ ฮ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                           โ ฮโฒ โ ฮโฒ โขโโ M โท A
renโโยฒ ฮท ๐ = (แตrenโโ (projโ ฮท) โ renโโ (projโ ฮท)) ๐


--------------------------------------------------------------------------------
--
-- Substitution


-- Simultaneous substitutions
infix 3 _โขโ_
_โขโ_ : Cx โ List Tp โ Set
ฮ โ ฮ โขโ ฮ = All (ฮป A โ ฮฃ Tm (ฮป M โ ฮ โ ฮ โข M โท A)) ฮ


แตrenโ : โ {ฮ ฮโฒ ฮ ฮ} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโ ฮ
                     โ ฮโฒ โ ฮ โขโ ฮ
แตrenโ ฮท ฯ = mapโ (mapฮฃ id (แตren ฮท)) ฯ

renโ : โ {ฮ ฮ ฮโฒ ฮ} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโ ฮ
                    โ ฮ โ ฮโฒ โขโ ฮ
renโ ฮท ฯ = mapโ (mapฮฃ id (ren ฮท)) ฯ


แตwkโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                     โ ฮ , (x , A) โ ฮ โขโ ฮ
แตwkโ ฯ = แตrenโ (wk idแตฃ) ฯ

wkโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                    โ ฮ โ ฮ , (x , A) โขโ ฮ
wkโ ฯ = renโ (wk idแตฃ) ฯ


แตliftโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                       โ ฮ , (x , A) โ ฮ โขโ ฮ , A
แตliftโ {x} ฯ = แตwkโ ฯ , (แตแต x , (แตแต x # zero))

liftโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                      โ ฮ โ ฮ , (x , A) โขโ ฮ , A
liftโ {x} ฯ = wkโ ฯ , (แต x , (แต x # zero))


แตidโ : โ {ฮ ฮ} โ ฮ โ ฮ โขโ mapโ projโ ฮ
แตidโ {โ}     = โ
แตidโ {ฮ , A} = แตliftโ แตidโ

idโ : โ {ฮ ฮ} โ ฮ โ ฮ โขโ mapโ projโ ฮ
idโ {โ}     = โ
idโ {ฮ , A} = liftโ idโ


lookupโ : โ {ฮ ฮ ฮ A} โ ฮ โ ฮ โขโ ฮ โ ฮ โ A
                      โ ฮฃ Tm (ฮป M โ ฮ โ ฮ โข M โท A)
lookupโ ฯ i = lookupโ ฯ i


-- Substitution
แตsubโโ : โ {ฮ ฮ ฮ M A} โ {ฮพ : List MVar} {{p : lenโ ฮพ โก lenโ ฮ}}
                       โ ฮ โ โ โขโ ฮ โ zipโ ฮพ ฮ โ ฮ โข M โท A
                       โ Tm
แตsubโโ ฯ (แตแต x # i)          = projโ (lookupโ ฯ (projโโ i))
แตsubโโ ฯ (แต x # i)           = แต x
แตsubโโ ฯ (ฦ x โ ๐)           = ฦ x โ แตsubโโ ฯ ๐
แตsubโโ ฯ (๐ $ โฐ)             = แตsubโโ ฯ ๐ $ แตsubโโ ฯ โฐ
แตsubโโ ฯ (๐ , โฐ)             = แตsubโโ ฯ ๐ , แตsubโโ ฯ โฐ
แตsubโโ ฯ (ฯโ ๐)              = ฯโ (แตsubโโ ฯ ๐)
แตsubโโ ฯ (ฯโ ๐)              = ฯโ (แตsubโโ ฯ ๐)
แตsubโโ ฯ tt                  = tt
แตsubโโ ฯ โ ๐ โ               = โ แตsubโโ ฯ ๐ โ
แตsubโโ {{p}} ฯ (โ ๐ โ x โ โฐ) = โ แตsubโโ ฯ ๐ โ x โ แตsubโโ {{foo p}} (แตliftโ {x} ฯ) โฐ

แตsub : โ {ฮ ฮ ฮ M A} โ {ฮพ : List MVar} {{p : lenโ ฮพ โก lenโ ฮ}}
                     โ (ฯ : ฮ โ โ โขโ ฮ) (๐ : zipโ ฮพ ฮ โ ฮ โข M โท A)
                     โ ฮ โ ฮ โข แตsubโโ ฯ ๐ โท A
แตsub ฯ (แตแต x # i)          = ren infแตฃ (projโ (lookupโ ฯ (projโโ i)))
แตsub ฯ (แต x # i)           = แต x # i
แตsub ฯ (ฦ x โ ๐)           = ฦ x โ แตsub ฯ ๐
แตsub ฯ (๐ $ โฐ)             = แตsub ฯ ๐ $ แตsub ฯ โฐ
แตsub ฯ (๐ , โฐ)             = แตsub ฯ ๐ , แตsub ฯ โฐ
แตsub ฯ (ฯโ ๐)              = ฯโ (แตsub ฯ ๐)
แตsub ฯ (ฯโ ๐)              = ฯโ (แตsub ฯ ๐)
แตsub ฯ tt                  = tt
แตsub ฯ โ ๐ โ               = โ แตsub ฯ ๐ โ
แตsub {{p}} ฯ (โ ๐ โ x โ โฐ) = โ แตsub ฯ ๐ โ x โ แตsub {{foo p}} (แตliftโ ฯ) โฐ


subโโ : โ {ฮ ฮ ฮ M A} โ {ฮพ : List Var} {{p : lenโ ฮพ โก lenโ ฮ}}
                      โ ฮ โ ฮ โขโ ฮ โ ฮ โ zipโ ฮพ ฮ โข M โท A
                      โ Tm
subโโ ฯ (แตแต x # i)      = แตแต x
subโโ ฯ (แต x # i)       = projโ (lookupโ ฯ (projโโ i))
subโโ {{p}} ฯ (ฦ x โ ๐) = ฦ x โ subโโ {{foo p}} (liftโ {x} ฯ) ๐
subโโ ฯ (๐ $ โฐ)         = subโโ ฯ ๐ $ subโโ ฯ โฐ
subโโ ฯ (๐ , โฐ)         = subโโ ฯ ๐ , subโโ ฯ โฐ
subโโ ฯ (ฯโ ๐)          = ฯโ (subโโ ฯ ๐)
subโโ ฯ (ฯโ ๐)          = ฯโ (subโโ ฯ ๐)
subโโ ฯ tt              = tt
subโโ ฯ โ ๐ โ           = โ subโโ {ฮ = โ} โ ๐ โ
subโโ ฯ (โ ๐ โ x โ โฐ)   = โ subโโ ฯ ๐ โ x โ subโโ (แตwkโ {x} ฯ) โฐ

sub : โ {ฮ ฮ ฮ M A} โ {ฮพ : List Var} {{p : lenโ ฮพ โก lenโ ฮ}}
                    โ (ฯ : ฮ โ ฮ โขโ ฮ) (๐ : ฮ โ zipโ ฮพ ฮ โข M โท A)
                    โ ฮ โ ฮ โข subโโ ฯ ๐ โท A
sub ฯ (แตแต x # i)      = แตแต x # i
sub ฯ (แต x # i)       = projโ (lookupโ ฯ (projโโ i))
sub {{p}} ฯ (ฦ x โ ๐) = ฦ x โ sub {{foo p}} (liftโ {x} ฯ) ๐
sub ฯ (๐ $ โฐ)         = sub ฯ ๐ $ sub ฯ โฐ
sub ฯ (๐ , โฐ)         = sub ฯ ๐ , sub ฯ โฐ
sub ฯ (ฯโ ๐)          = ฯโ (sub ฯ ๐)
sub ฯ (ฯโ ๐)          = ฯโ (sub ฯ ๐)
sub ฯ tt              = tt
sub ฯ โ ๐ โ           = โ sub {ฮ = โ} โ ๐ โ
sub ฯ (โ ๐ โ x โ โฐ)   = โ sub ฯ ๐ โ x โ sub (แตwkโ {x} ฯ) โฐ


--------------------------------------------------------------------------------
--
-- Semantics


-- Introspective Kripke models
record ๐ : Setโ where
  field
    ๐ฒ    : Set

    _๐ฑ_  : ๐ฒ โ TVar โ Set

    _โฅ_  : ๐ฒ โ ๐ฒ โ Set

    idโ  : โ {w} โ w โฅ w

    _โโ_ : โ {w wโฒ wโณ} โ wโฒ โฅ w โ wโณ โฅ wโฒ
                       โ wโณ โฅ w

    movแตฅ : โ {x w wโฒ} โ wโฒ โฅ w โ w ๐ฑ x
                      โ wโฒ ๐ฑ x

    โ_โ  : ๐ฒ โ Cx

    โ_โโ : โ {w wโฒ} โ wโฒ โฅ w
                    โ โ wโฒ โ โยฒ โ w โ

open ๐ {{โฆ}} public


แตโ_โ : โ {{๐ : ๐}} โ ๐ฒ โ List (MVar ร Tp)
แตโ w โ = projโ โ w โ

แตโ_โโ : โ {{๐ : ๐}} {w wโฒ} โ wโฒ โฅ w
                           โ แตโ wโฒ โ โ แตโ w โ
แตโ ฮท โโ = projโ โ ฮท โโ


-- Values
mutual
  infix 3 _โฉ_
  _โฉ_ : โ {{๐ : ๐}} โ ๐ฒ โ Tp โ Set

  w โฉ แตแต x  = w ๐ฑ x

  w โฉ A โ B = โ {wโฒ} โ (ฮท : wโฒ โฅ w) (k : wโฒ แตโฉ A)
                      โ wโฒ แตโฉ B

  w โฉ A โง B = w แตโฉ A ร w แตโฉ B

  w โฉ ๐     = โค

  w โฉ โก A   = w แตแตโฉ A

  infix 3 _แตโฉ_
  _แตโฉ_ : โ {{๐ : ๐}} โ ๐ฒ โ Tp โ Set
  w แตโฉ A = โ {wโฒ C} โ (ฮท : wโฒ โฅ w) (f : โ {wโณ} โ wโณ โฅ wโฒ โ wโณ โฉ A
                                                 โ ฮฃ Tm (ฮป Mโณ โ โ wโณ โ โขโโ Mโณ โท C))
                     โ ฮฃ Tm (ฮป Mโฒ โ โ wโฒ โ โขโโ Mโฒ โท C)

  infix 3 _แตแตโฉ_
  _แตแตโฉ_ : โ {{๐ : ๐}} โ ๐ฒ โ Tp โ Set
  w แตแตโฉ A = ฮฃ Tm (ฮป M โ แตโ w โ โ โ โข M โท A) ร w แตโฉ A


syn : โ {{๐ : ๐}} {w A} โ w แตแตโฉ A
                        โ ฮฃ Tm (ฮป M โ แตโ w โ โ โ โข M โท A)
syn p = projโ p

sem : โ {{๐ : ๐}} {w A} โ w แตแตโฉ A
                        โ w แตโฉ A
sem p = projโ p


-- Environments
infix 3 _แตโฉโ_
_แตโฉโ_ : โ {{๐ : ๐}} โ ๐ฒ โ List Tp โ Set
w แตโฉโ ฮ = All (w แตโฉ_) ฮ

infix 3 _แตแตโฉโ_
_แตแตโฉโ_ : โ {{๐ : ๐}} โ ๐ฒ โ List Tp โ Set
w แตแตโฉโ ฮ = All (w แตแตโฉ_) ฮ


synโ : โ {{๐ : ๐}} {w ฮ} โ w แตแตโฉโ ฮ
                         โ แตโ w โ โ โ โขโ ฮ
synโ ฮด = mapโ syn ฮด

semโ : โ {{๐ : ๐}} {w ฮ} โ w แตแตโฉโ ฮ
                         โ w แตโฉโ ฮ
semโ ฮด = mapโ sem ฮด


-- Semantic entailment
infix 3 _โจ_
_โจ_ : Cx โ Tp โ Setโ
ฮ โ ฮ โจ A = โ {{๐ : ๐}} {w} โ w แตแตโฉโ mapโ projโ ฮ โ w แตโฉโ mapโ projโ ฮ
                             โ w แตโฉ A


-- Accessibility
mutual
  mov : โ {{๐ : ๐}} {A w wโฒ} โ wโฒ โฅ w โ w โฉ A
                             โ wโฒ โฉ A
  mov {แตแต x}  ฮท v = movแตฅ ฮท v
  mov {A โ B} ฮท f = ฮป ฮทโฒ โ f (ฮท โโ ฮทโฒ)
  mov {A โง B} ฮท p = แตmov {A} ฮท (projโ p) , แตmov {B} ฮท (projโ p)
  mov {๐}     ฮท t = tt
  mov {โก A}   ฮท p = แตแตmov ฮท p

  แตmov : โ {{๐ : ๐}} {A w wโฒ} โ wโฒ โฅ w โ w แตโฉ A
                              โ wโฒ แตโฉ A
  แตmov ฮท k = ฮป ฮทโฒ f โ k (ฮท โโ ฮทโฒ) f

  แตแตmov : โ {{๐ : ๐}} {A w wโฒ} โ wโฒ โฅ w โ w แตแตโฉ A
                               โ wโฒ แตแตโฉ A
  แตแตmov {A} ฮท p = projโ (syn p) , แตren แตโ ฮท โโ (projโ (syn p)) , แตmov {A} ฮท (sem p)

แตmovโ : โ {{๐ : ๐}} {ฮ w wโฒ} โ wโฒ โฅ w โ w แตโฉโ ฮ โ wโฒ แตโฉโ ฮ
-- TODO: Why does Agda require seemingly unused annotations here?
-- แตmovโ ฮท ฮณ = mapโ (แตmov ฮท) ฮณ
แตmovโ ฮท ฮณ = mapโ (ฮป {A} k {wโณ} {C} โ แตmov {A} ฮท (ฮป {wโด} {Cโฒ} โ k {wโด} {Cโฒ})) ฮณ

แตแตmovโ : โ {{๐ : ๐}} {ฮ w wโฒ} โ wโฒ โฅ w โ w แตแตโฉโ ฮ
                              โ wโฒ แตแตโฉโ ฮ
แตแตmovโ ฮท ฮด = mapโ (แตแตmov ฮท) ฮด


-- Kripke continuation monad
unit : โ {{๐ : ๐}} {A w} โ w โฉ A
                         โ w แตโฉ A
unit {A} a = ฮป ฮท f โ
               f idโ (mov {A} ฮท a)

bind : โ {{๐ : ๐}} {A C w} โ w แตโฉ A โ (โ {wโฒ} โ wโฒ โฅ w โ wโฒ โฉ A
                                                 โ wโฒ แตโฉ C)
                           โ w แตโฉ C
bind k f = ฮป ฮท fโฒ โ
             k ฮท (ฮป ฮทโฒ a โ
               f (ฮท โโ ฮทโฒ) a idโ (ฮป ฮทโณ b โ
                 fโฒ (ฮทโฒ โโ ฮทโณ) b))


lookup : โ {{๐ : ๐}} {ฮ A w} โ w แตโฉโ ฮ โ ฮ โ A
                             โ w แตโฉ A
lookup ฮณ i = lookupโ ฮณ i


-- Soundness
โ : โ {ฮ ฮ M A} โ ฮ โ ฮ โข M โท A
                โ ฮ โ ฮ โจ A
โ (แตแต x # i)             = ฮป ฮด ฮณ โ lookup (semโ ฮด) (projโโ i)
โ (แต x # i)              = ฮป ฮด ฮณ โ lookup ฮณ (projโโ i)
โ (ฦ_โ_ {A} {B} x ๐)     = ฮป ฮด ฮณ โ unit {A โ B} (ฮป ฮท k โ
                             โ ๐ (แตแตmovโ ฮท ฮด) (แตmovโ ฮท ฮณ , k))
โ (_$_ {A} {B} ๐ โฐ)      = ฮป ฮด ฮณ โ bind {A โ B} {B} (โ ๐ ฮด ฮณ) (ฮป ฮท f โ
                             f idโ (โ โฐ (แตแตmovโ ฮท ฮด) (แตmovโ ฮท ฮณ)))
โ (_,_ {A} {B} ๐ โฐ)      = ฮป ฮด ฮณ โ unit {A โง B} (โ ๐ ฮด ฮณ , โ โฐ ฮด ฮณ)
โ (ฯโ {A} {B} ๐)         = ฮป ฮด ฮณ โ bind {A โง B} {A} (โ ๐ ฮด ฮณ) (ฮป ฮท p โ projโ p)
โ (ฯโ {A} {B} ๐)         = ฮป ฮด ฮณ โ bind {A โง B} {B} (โ ๐ ฮด ฮณ) (ฮป ฮท p โ projโ p)
โ tt                     = ฮป ฮด ฮณ โ unit {๐} tt
โ {ฮ} (โ_โ {A} {M} ๐)    rewrite lemโ ฮ โปยน
                         = ฮป ฮด ฮณ โ unit {โก A} ( แตsubโโ {ฮพ = mapโ projโ ฮ} (synโ ฮด) ๐
                                               , แตsub {ฮพ = mapโ projโ ฮ} (synโ ฮด) ๐
                                               , โ ๐ ฮด โ
                                               )
โ (โ_โ_โ_ {A} {C} ๐ x โฐ) = ฮป ฮด ฮณ โ bind {โก A} {C} (โ ๐ ฮด ฮณ) (ฮป ฮท p โ
                             โ โฐ (แตแตmovโ ฮท ฮด , p) (แตmovโ ฮท ฮณ))


--------------------------------------------------------------------------------
--
-- Completeness


-- Universal model
instance
  ๐แตค : ๐
  ๐แตค = record
         { ๐ฒ    = Cx
         ; _๐ฑ_  = _๐ฑแตค_
         ; _โฅ_  = _โยฒ_
         ; idโ  = idแตฃยฒ
         ; _โโ_ = _โแตฃยฒ_
         ; movแตฅ = ฮป { ฮท (M , ๐) โ M , renโโยฒ ฮท ๐ }
         ; โ_โ  = id
         ; โ_โโ = id
         }
    where
      infix 3 _๐ฑแตค_
      _๐ฑแตค_ : Cx โ TVar โ Set
      ฮ โ ฮ ๐ฑแตค x = ฮฃ Tm (ฮป M โ ฮ โ ฮ โขโโ M โท แตแต x )


-- Soundness and completeness with respect to the universal model

-- TODO: Generate fresh names!
mutual
  โแตค : โ {A M ฮ ฮ} โ ฮ โ ฮ โขโโ M โท A
                   โ ฮ โ ฮ แตโฉ A
  โแตค {แตแต x}  {M} ๐ = unit {แตแต x} (M , โฟแต ๐)
  โแตค {A โ B} {M} ๐ = unit {A โ B} (ฮป ฮท k โ โแตค (renโโยฒ ฮท ๐ $ projโ (โแตค k)))
  โแตค {A โง B} {M} ๐ = unit {A โง B} (โแตค (ฯโ ๐) , โแตค (ฯโ ๐))
  โแตค {๐ }    {M} ๐ = unit {๐} tt
  โแตค {โก A}   {M} ๐ = ฮป ฮท f โ
                       let N , โฐ = f (แตwkยฒ idแตฃยฒ) ( แตแต "MFRESH"
                                                 , (แตแต "MFRESH" # zero)
                                                 , โแตค (แตแต "MFRESH" # zero)
                                                 ) in
                       โ M โ "MFRESH" โ N , โ renโโยฒ ฮท ๐ โ "MFRESH" โ โฐ

  โแตค : โ {A ฮ ฮ} โ ฮ โ ฮ แตโฉ A
                 โ ฮฃ Tm (ฮป M โ ฮ โ ฮ โขโโ M โท A)
  โแตค {แตแต x}  k = k idแตฃยฒ (ฮป ฮท v โ v)
  โแตค {A โ B} k = k idแตฃยฒ (ฮป ฮท f โ let M , ๐ = โแตค (f (wkยฒ idแตฃยฒ) (โแตค (แต "RFRESH" # zero))) in
                                  ฦ "RFRESH" โ M , ฦ "RFRESH" โ ๐)
  โแตค {A โง B} k = k idแตฃยฒ (ฮป ฮท p โ let M , ๐ = โแตค (projโ p) in
                                  let N , โฐ = โแตค (projโ p) in
                                  (M , N) , (๐ , โฐ))
  โแตค {๐}     k = k idแตฃยฒ (ฮป ฮท t โ tt , tt)
  โแตค {โก A}   k = k idแตฃยฒ (ฮป ฮท p โ let M , ๐ = syn p in
                                  โ M โ , โ ๐ โ)


แตidโ : โ {ฮ ฮ} โ ฮ โ ฮ แตแตโฉโ mapโ projโ ฮ
แตidโ {โ}           = โ
แตidโ {ฮ , (x , A)} = แตแตmovโ (แตwkยฒ idแตฃยฒ) แตidโ , (แตแต x , (แตแต x # zero) , โแตค (แตแต x # zero))

idโ : โ {ฮ ฮ} โ ฮ โ ฮ แตโฉโ mapโ projโ ฮ
idโ {โ}           = โ
idโ {ฮ , (x , A)} = แตmovโ (wkยฒ idแตฃยฒ) idโ , โแตค (แต x # zero)


-- Completeness
โ : โ {ฮ ฮ A} โ ฮ โ ฮ โจ A
              โ ฮฃ Tm (ฮป M โ ฮ โ ฮ โขโโ M โท A)
โ f = โแตค (f แตidโ idโ)


-- Normalisation
nm : โ {ฮ ฮ M A} โ ฮ โ ฮ โข M โท A
                 โ ฮฃ Tm (ฮป Mโฒ โ ฮ โ ฮ โขโโ Mโฒ โท A)
nm = โ โ โ


--------------------------------------------------------------------------------
--
-- Examples


แตแต0 : โ {A ฮ ฮ} โ (x : MVar) โ ฮ , (x , A) โ ฮ โข แตแต x โท A
แตแต0 x = แตแต x # zero

แตแต1 : โ {A yB ฮ ฮ} โ (x : MVar) โ ฮ , (x , A) , yB โ ฮ โข แตแต x โท A
แตแต1 x = แตแต x # suc zero

แตแต2 : โ {A yB zC ฮ ฮ} โ (x : MVar) โ ฮ , (x , A) , yB , zC โ ฮ โข แตแต x โท A
แตแต2 x = แตแต x # suc (suc zero)


แต0 : โ {A ฮ ฮ} โ (x : Var) โ ฮ โ ฮ , (x , A) โข แต x โท A
แต0 x = แต x # zero

แต1 : โ {A yB ฮ ฮ} โ (x : Var) โ ฮ โ ฮ , (x , A) , yB โข แต x โท A
แต1 x = แต x # suc zero

แต2 : โ {A yB zC ฮ ฮ} โ (x : Var) โ ฮ โ ฮ , (x , A) , yB , zC โข แต x โท A
แต2 x = แต x # suc (suc zero)


แตหฃIโโ : Tm
แตหฃIโโ = ฦ "x" โ แต "x"

แตหฃKโโ : Tm
แตหฃKโโ = ฦ "x" โ (ฦ "y" โ แต "x")

แตหฃSโโ : Tm
แตหฃSโโ = ฦ "f" โ (ฦ "g" โ (ฦ "x" โ
          ((แต "f" $ แต "x") $ (แต "g" $ แต "x"))))


แตหฃDโโ : Tm
แตหฃDโโ = ฦ "'f" โ (ฦ "'x" โ
          (โ แต "'f" โ "f" โ (โ แต "'x" โ "x" โ
            (โ แตแต "f" $ แตแต "x" โ))))

แตหฃTโโ : Tm
แตหฃTโโ = ฦ "'x" โ (โ แต "'x" โ "x" โ (แตแต "x"))

แตหฃ4โโ : Tm
แตหฃ4โโ = ฦ "'x" โ (โ แต "'x" โ "x" โ (โ โ แตแต "x" โ โ))


แตหฃI : โ {A ฮ ฮ}
    โ ฮ โ ฮ โข แตหฃIโโ โท A โ A
แตหฃI = ฦ "x" โ แต0 "x"

แตหฃK : โ {A B ฮ ฮ}
    โ ฮ โ ฮ โข แตหฃKโโ โท A โ B โ A
แตหฃK = ฦ "x" โ (ฦ "y" โ แต1 "x")

แตหฃS : โ {A B C ฮ ฮ}
    โ ฮ โ ฮ โข แตหฃSโโ โท (A โ B โ C) โ (A โ B) โ A โ C
แตหฃS = ฦ "f" โ (ฦ "g" โ (ฦ "x" โ
        ((แต2 "f" $ แต0 "x" ) $ (แต1 "g" $ แต0 "x"))))


แตหฃD : โ {A B ฮ ฮ}
    โ ฮ โ ฮ โข แตหฃDโโ โท โก (A โ B) โ โก A โ โก B
แตหฃD = ฦ "'f" โ (ฦ "'x" โ
        (โ แต1 "'f" โ "f" โ (โ แต0 "'x" โ "x" โ
          (โ แตแต1 "f" $ แตแต0 "x" โ))))

แตหฃT : โ {A ฮ ฮ}
    โ ฮ โ ฮ โข แตหฃTโโ โท โก A โ A
แตหฃT = ฦ "'x" โ (โ แต0 "'x" โ "x" โ (แตแต0 "x"))

แตหฃ4 : โ {A ฮ ฮ}
    โ ฮ โ ฮ โข แตหฃ4โโ โท โก A โ โก โก A
แตหฃ4 = ฦ "'x" โ (โ แต0 "'x" โ "x" โ (โ โ แตแต0 "x" โ โ))


--------------------------------------------------------------------------------
--
-- Conversion tests


testโผ : โ {ฮ ฮ Mโ Mโ A} โ ฮ โ ฮ โข Mโ โท A โ ฮ โ ฮ โข Mโ โท A โ Set
testโผ {Mโ = Mโ} ๐โ ๐โ with nm ๐โ
testโผ {Mโ = Mโ} ๐โ ๐โ | Mโโฒ , ๐โโฒ with Mโโฒ โโโ Mโ
testโผ {Mโ = Mโ} ๐โ ๐โ | .Mโ , ๐โโฒ | yes refl  = embโโ ๐โโฒ โก ๐โ
testโผ {Mโ = Mโ} ๐โ ๐โ | Mโโฒ , ๐โโฒ | no MโโฒโขMโ = โฅ


-- redโ : โ {ฮ ฮ x A B} โ (๐ : ฮ โ ฮ , A โข B) (โฐ : ฮ โ ฮ โข A)
--                      โ ฦ x โ ๐ $ โฐ โผ sub (idโ , (x , โฐ)) ๐

testโผredโ : testโผ {โ} {โ , ("a" , "A")}
                  ((ฦ "x" โ แต0 "x") $ แต0 "a")
                  (แต0 "a")
testโผredโ = refl


-- redโงโ : โ {ฮ ฮ A B} โ (๐ : ฮ โ ฮ โข A) (โฐ : ฮ โ ฮ โข B)
--                     โ ฯโ (๐ , โฐ) โผ ๐

testโผredโงโ : testโผ {โ} {โ , ("a" , "A") , ("b" , "B")}
                   (ฯโ (แต1 "a" , แต0 "b"))
                   (แต1 "a")
testโผredโงโ = refl


-- redโงโ : โ {ฮ ฮ A B} โ (๐ : ฮ โ ฮ โข A) (โฐ : ฮ โ ฮ โข B)
--                     โ ฯโ (๐ , โฐ) โผ โฐ

testโผredโงโ : testโผ {โ} {โ , ("a" , "A") , ("b" , "B")}
                   (ฯโ (แต1 "a" , แต0 "b"))
                   (แต0 "b")
testโผredโงโ = refl


-- redโก : โ {ฮ ฮ x A C} โ (๐ : ฮ โ โ โข A) (โฐ : ฮ , A โ ฮ โข C)
--                      โ โ โ ๐ โ โ x โ โฐ โผ แตsub (แตidโ , (x , ๐)) โฐ

testโผredโก : testโผ {โ , ("a" , "A")} {โ}
                  (โ โ แตแต0 "a" โ โ "x" โ แตแต0 "x")
                  (แตแต0 "a")
testโผredโก = refl


-- expโ : โ {ฮ ฮ x A B} โ (๐ : ฮ โ ฮ โข A โ B) {{_ : fresh x ฮ}}
--                      โ ๐ โผ ฦ x โ (ren (wk idแตฃ) ๐ $ แต0 x)

-- TODO: Generate sensible variable names
testโผexpโ : testโผ {โ} {โ , ("f" , "A" โ "B")}
                  (แต0 "f")
                  (ฦ "RFRESH" โ (ren (wk idแตฃ) (แต0 "f") $ แต0 "RFRESH"))
testโผexpโ = refl


-- expโง : โ {ฮ ฮ A B} โ (๐ : ฮ โ ฮ โข A โง B)
--                    โ ๐ โผ ฯโ ๐ , ฯโ ๐

testโผexpโง : testโผ {โ} {โ , ("p" , "A" โง "B")}
                  (แต0 "p")
                  (ฯโ (แต0 "p") , ฯโ (แต0 "p"))
testโผexpโง = refl


-- exp๐ : โ {ฮ ฮ} โ (๐ : ฮ โ ฮ โข ๐)
--                โ ๐ โผ tt

testโผexp๐ : testโผ {โ} {โ , ("t" , ๐)}
                  (แต0 "t")
                  tt
testโผexp๐ = refl


-- expโก : โ {ฮ ฮ x A} โ (๐ : ฮ โ ฮ โข โก A) {{_ : fresh x ฮ}}
--                    โ ๐ โผ โ ๐ โ x โ โ แตแต0 x โ

-- TODO: Generate sensible variable names
testโผexpโก : testโผ {โ} {โ , ("'a" , โก "A")}
                  (แต0 "'a")
                  (โ แต0 "'a" โ "MFRESH" โ โ แตแต0 "MFRESH" โ)
testโผexpโก = refl


-- commโก$ : โ {ฮ ฮ x A B} โ (๐ฌ : ฮ โ ฮ โข โก (A โ B)) {{_ : fresh x ฮ}}
--                           (๐ : ฮ , (x , A โ B) โ ฮ โข A โ B) (โฐ : ฮ โ ฮ โข A)
--                        โ (โ ๐ฌ โ x โ ๐) $ โฐ โผ โ ๐ฌ โ x โ (๐ $ (แตren (wk idแตฃ) โฐ))

-- TODO: Stop forgetting variable names
testโผcommโก$ : testโผ {โ} {โ , ("'f" , โก ("A" โ "B")) , ("a" , "A")}
                    ((โ แต1 "'f" โ "x" โ แตแต0 "x") $ แต0 "a")
                    (โ แต1 "'f" โ "MFRESH" โ (แตแต0 "MFRESH" $ แตren (wk idแตฃ) (แต0 "a")))
testโผcommโก$ = refl


-- commโกโโ : โ {ฮ ฮ xโ xโ A C} โ (๐ฌ : ฮ โ ฮ โข โก โก A) {{_ : fresh xโ ฮ}} {{_ : fresh xโ ฮ}}
--                                (๐ : ฮ , (xโ , โก A) โ ฮ โข โก A) (โฐ : ฮ , (xโ , A) โ ฮ โข C)
--                             โ โ (โ ๐ฌ โ xโ โ ๐) โ xโ โ โฐ โผ โ ๐ฌ โ xโ โ (โ ๐ โ xโ โ (แตren (wk idแตฃ) โฐ))

-- TODO: Generate sensible variable names
testโผcommโกโโ : testโผ {โ} {โ , ("''a" , โก โก "A")}
                     (โ โ แต0 "''a" โ "xโ" โ แตแต0 "xโ" โ "xโ" โ แตแต0 "xโ")
                     (โ แต0 "''a" โ "MFRESH" โ โ แตแต0 "MFRESH" โ "MFRESH" โ แตแต0 "MFRESH")
testโผcommโกโโ = refl


-- commโกฯโ : โ {ฮ ฮ x A B} โ (๐ฌ : ฮ โ ฮ โข โก (A โง B)) {{_ : fresh x ฮ}}
--                            (๐ : ฮ , (x , A โง B) โ ฮ โข A โง B)
--                         โ ฯโ (โ ๐ฌ โ x โ ๐) โผ โ ๐ฌ โ x โ (ฯโ ๐)

-- TODO: Stop forgetting variable names
testโผcommโกฯโ : testโผ {โ} {โ , ("'x" , โก ("A" โง "B"))}
                     (ฯโ (โ แต0 "'x" โ "x" โ แตแต0 "x"))
                     (โ แต0 "'x" โ "MFRESH" โ ฯโ (แตแต0 "MFRESH"))
testโผcommโกฯโ = refl


-- commโกฯโ : โ {ฮ ฮ x A B} โ (๐ฌ : ฮ โ ฮ โข โก (A โง B)) {{_ : fresh x ฮ}}
--                            (๐ : ฮ , (x , A โง B) โ ฮ โข A โง B)
--                         โ ฯโ (โ ๐ฌ โ x โ ๐) โผ โ ๐ฌ โ x โ (ฯโ ๐)

-- TODO: Stop forgetting variable names
testโผcommโกฯโ : testโผ {โ} {โ , ("'x" , โก ("A" โง "B"))}
                     (ฯโ (โ แต0 "'x" โ "x" โ แตแต0 "x"))
                     (โ แต0 "'x" โ "MFRESH" โ ฯโ (แตแต0 "MFRESH"))
testโผcommโกฯโ = refl


--------------------------------------------------------------------------------
--
-- Self-interpretation


-- weakBP : โ {ฮ ฮ A B} โ (๐ : ฮ โ ฮ โข A)
--                      โ ๐ $ โ ๐ โ โผ โ ๐ โ

testโผweakBP : testโผ {โ , ("x" , "A")} {โ}
                    (แตหฃT $ โ แตแต0 "x" โ)
                    (แตแต0 "x")
testโผweakBP = refl


-- Andrej : โ {ฮ ฮ A B} โ (๐ : ฮ โ ฮ โข A โ B) (โฐ : ฮ โ ฮ โข A)
--                      โ (๐ป $ โ ๐ โ) $ โ โฐ โ โผ โ ๐ $ โฐ โ

testโผAndrej : testโผ {โ , ("f" , "A" โ "B") , ("x" , "A")} {โ}
                    ((แตหฃD $ โ แตแต1 "f" โ) $ โ แตแต0 "x" โ)
                    (โ แตแต1 "f" $ แตแต0 "x" โ)
testโผAndrej = refl


--------------------------------------------------------------------------------
