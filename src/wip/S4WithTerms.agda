{-# OPTIONS --rewriting #-}

module S4WithTerms where

open import Prelude public


--------------------------------------------------------------------------------
--
-- Syntax


-- Type variables
data TVar : Set where
  tvar : String โ TVar

injtvar : โ {sโ sโ} โ tvar sโ โก tvar sโ โ sโ โก sโ
injtvar refl = refl

_โโแตฅ_ : (xโ xโ : TVar) โ Dec (xโ โก xโ)
tvar sโ โโแตฅ tvar sโ = mapDec (tvar &_) injtvar (sโ โโ sโ)

instance
  tvarIsString : IsString TVar
  tvarIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ tvar s
      }


-- Types
infixl 9 _โง_
infixr 7 _โ_
data ๐ฏ : Set where
  แตแต  : (x : TVar) โ ๐ฏ
  _โ_ : (A B : ๐ฏ) โ ๐ฏ
  _โง_ : (A B : ๐ฏ) โ ๐ฏ
  ๐   : ๐ฏ
  โก_  : (A : ๐ฏ) โ ๐ฏ

instance
  typeIsString : IsString ๐ฏ
  typeIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ แตแต (tvar s)
      }


injแตแต : โ {xโ xโ} โ แตแต xโ โก แตแต xโ โ xโ โก xโ
injแตแต refl = refl

injโโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โ Bโ โก Aโ โ Bโ โ Aโ โก Aโ
injโโ refl = refl

injโโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โ Bโ โก Aโ โ Bโ โ Bโ โก Bโ
injโโ refl = refl

injโงโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โง Bโ โก Aโ โง Bโ โ Aโ โก Aโ
injโงโ refl = refl

injโงโ : โ {Aโ Aโ Bโ Bโ} โ Aโ โง Bโ โก Aโ โง Bโ โ Bโ โก Bโ
injโงโ refl = refl

injโก : โ {Aโ Aโ} โ โก Aโ โก โก Aโ โ Aโ โก Aโ
injโก refl = refl


_โโโ_ : (Aโ Aโ : ๐ฏ) โ Dec (Aโ โก Aโ)

แตแต xโ โโโ แตแต xโ     with xโ โโแตฅ xโ
...                 | yes refl = yes refl
...                 | no xโโขxโ = no (xโโขxโ โ injแตแต)
แตแต xโ โโโ (Aโ โ Bโ) = no (ฮป ())
แตแต xโ โโโ (Aโ โง Bโ) = no (ฮป ())
แตแต xโ โโโ ๐         = no (ฮป ())
แตแต xโ โโโ (โก Aโ)    = no (ฮป ())

(Aโ โ Bโ) โโโ แตแต xโ     = no (ฮป ())
(Aโ โ Bโ) โโโ (Aโ โ Bโ) with Aโ โโโ Aโ | Bโ โโโ Bโ
...                     | yes refl | yes refl = yes refl
...                     | yes refl | no BโโขBโ = no (BโโขBโ โ injโโ)
...                     | no AโโขAโ | _        = no (AโโขAโ โ injโโ)
(Aโ โ Bโ) โโโ (Aโ โง Bโ) = no (ฮป ())
(Aโ โ Bโ) โโโ ๐         = no (ฮป ())
(Aโ โ Bโ) โโโ (โก Aโ)    = no (ฮป ())

(Aโ โง Bโ) โโโ แตแต xโ     = no (ฮป ())
(Aโ โง Bโ) โโโ (Aโ โ Bโ) = no (ฮป ())
(Aโ โง Bโ) โโโ (Aโ โง Bโ) with Aโ โโโ Aโ | Bโ โโโ Bโ
...                     | yes refl | yes refl = yes refl
...                     | yes refl | no BโโขBโ = no (BโโขBโ โ injโงโ)
...                     | no AโโขAโ | _        = no (AโโขAโ โ injโงโ)
(Aโ โง Bโ) โโโ ๐         = no (ฮป ())
(Aโ โง Bโ) โโโ (โก Aโ)    = no (ฮป ())

๐ โโโ แตแต xโ     = no (ฮป ())
๐ โโโ (Aโ โ Bโ) = no (ฮป ())
๐ โโโ (Aโ โง Bโ) = no (ฮป ())
๐ โโโ ๐         = yes refl
๐ โโโ (โก Aโ)    = no (ฮป ())

(โก Aโ) โโโ แตแต xโ     = no (ฮป ())
(โก Aโ) โโโ (Aโ โ Bโ) = no (ฮป ())
(โก Aโ) โโโ (Aโ โง Bโ) = no (ฮป ())
(โก Aโ) โโโ ๐         = no (ฮป ())
(โก Aโ) โโโ (โก Aโ)    with Aโ โโโ Aโ
...                  | yes refl = yes refl
...                  | no AโโขAโ = no (AโโขAโ โ injโก)


-- Modal variables
data MVar : Set where
  mvar : String โ MVar

injmvar : โ {sโ sโ} โ mvar sโ โก mvar sโ โ sโ โก sโ
injmvar refl = refl

_โโแตฅ_ : (xโ xโ : MVar) โ Dec (xโ โก xโ)
mvar sโ โโแตฅ mvar sโ = mapDec (mvar &_) injmvar (sโ โโ sโ)

instance
  mvarIsString : IsString MVar
  mvarIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ mvar s
      }


-- Regular variables
data RVar : Set where
  rvar : String โ RVar

injrvar : โ {sโ sโ} โ rvar sโ โก rvar sโ โ sโ โก sโ
injrvar refl = refl

_โแตฃแตฅ_ : (xโ xโ : RVar) โ Dec (xโ โก xโ)
rvar sโ โแตฃแตฅ rvar sโ = mapDec (rvar &_) injrvar (sโ โโ sโ)

instance
  rvarIsString : IsString RVar
  rvarIsString =
    record
      { Constraint = ฮป s โ โค
      ; fromString = ฮป s โ rvar s
      }


-- Terms
data Term : Set where
  แตแต     : (x : MVar) โ Term
  สณแต     : (x : RVar) โ Term
  ฦ_โ_   : (x : RVar) (M : Term) โ Term
  _$_    : (M N : Term) โ Term
  _,_    : (M N : Term) โ Term
  ฯโ     : (M : Term) โ Term
  ฯโ     : (M : Term) โ Term
  tt     : Term
  โ_โ    : (M : Term) โ Term
  โ_โ_โ_ : (M : Term) (x : MVar) (N : Term) โ Term
  _โฆ_    : (M : Term) (A : ๐ฏ) โ Term


injแตแต : โ {xโ xโ} โ แตแต xโ โก แตแต xโ โ xโ โก xโ
injแตแต refl = refl

injสณแต : โ {xโ xโ} โ สณแต xโ โก สณแต xโ โ xโ โก xโ
injสณแต refl = refl

injฦโ : โ {xโ xโ Mโ Mโ} โ ฦ xโ โ Mโ โก ฦ xโ โ Mโ โ xโ โก xโ
injฦโ refl = refl

injฦโ : โ {xโ xโ Mโ Mโ} โ ฦ xโ โ Mโ โก ฦ xโ โ Mโ โ Mโ โก Mโ
injฦโ refl = refl

inj$โ : โ {Mโ Mโ Nโ Nโ} โ Mโ $ Nโ โก Mโ $ Nโ โ Mโ โก Mโ
inj$โ refl = refl

inj$โ : โ {Mโ Mโ Nโ Nโ} โ Mโ $ Nโ โก Mโ $ Nโ โ Nโ โก Nโ
inj$โ refl = refl

inj,โ : โ {Mโ Mโ Nโ Nโ} โ Mโ Term., Nโ โก Mโ , Nโ โ Mโ โก Mโ
inj,โ refl = refl

inj,โ : โ {Mโ Mโ Nโ Nโ} โ Mโ Term., Nโ โก Mโ , Nโ โ Nโ โก Nโ
inj,โ refl = refl

injฯโ : โ {Mโ Mโ} โ ฯโ Mโ โก ฯโ Mโ โ Mโ โก Mโ
injฯโ refl = refl

injฯโ : โ {Mโ Mโ} โ ฯโ Mโ โก ฯโ Mโ โ Mโ โก Mโ
injฯโ refl = refl

injโโ : โ {Mโ Mโ} โ โ Mโ โ โก โ Mโ โ โ Mโ โก Mโ
injโโ refl = refl

injโโโ : โ {Mโ Mโ xโ xโ Nโ Nโ} โ โ Mโ โ xโ โ Nโ โก โ Mโ โ xโ โ Nโ โ Mโ โก Mโ
injโโโ refl = refl

injโโโ : โ {Mโ Mโ xโ xโ Nโ Nโ} โ โ Mโ โ xโ โ Nโ โก โ Mโ โ xโ โ Nโ โ xโ โก xโ
injโโโ refl = refl

injโโโ : โ {Mโ Mโ xโ xโ Nโ Nโ} โ โ Mโ โ xโ โ Nโ โก โ Mโ โ xโ โ Nโ โ Nโ โก Nโ
injโโโ refl = refl

injโฆโ : โ {Mโ Mโ Aโ Aโ} โ Mโ โฆ Aโ โก Mโ โฆ Aโ โ Mโ โก Mโ
injโฆโ refl = refl

injโฆโ : โ {Mโ Mโ Aโ Aโ} โ Mโ โฆ Aโ โก Mโ โฆ Aโ โ Aโ โก Aโ
injโฆโ refl = refl


_โโโ_ : (Mโ Mโ : Term) โ Dec (Mโ โก Mโ)

(แตแต xโ) โโโ (แตแต xโ)          with xโ โโแตฅ xโ
...                          | yes refl = yes refl
...                          | no xโโขxโ = no (xโโขxโ โ injแตแต)
(แตแต xโ) โโโ (สณแต xโ)          = no (ฮป ())
(แตแต xโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(แตแต xโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(แตแต xโ) โโโ (Mโ , โโ)        = no (ฮป ())
(แตแต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(แตแต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(แตแต xโ) โโโ tt               = no (ฮป ())
(แตแต xโ) โโโ โ Mโ โ           = no (ฮป ())
(แตแต xโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(แตแต xโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(สณแต xโ) โโโ (แตแต xโ)          = no (ฮป ())
(สณแต xโ) โโโ (สณแต xโ)          with xโ โแตฃแตฅ xโ
...                          | yes refl = yes refl
...                          | no xโโขxโ = no (xโโขxโ โ injสณแต)
(สณแต xโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(สณแต xโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(สณแต xโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(สณแต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(สณแต xโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(สณแต xโ) โโโ tt               = no (ฮป ())
(สณแต xโ) โโโ โ Mโ โ           = no (ฮป ())
(สณแต xโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(สณแต xโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(ฦ xโ โ Mโ) โโโ (แตแต xโ)          = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (สณแต xโ)          = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (ฦ xโ โ Mโ)      with xโ โแตฃแตฅ xโ | Mโ โโโ Mโ
...                              | yes refl | yes refl = yes refl
...                              | yes refl | no MโโขMโ = no (MโโขMโ โ injฦโ)
...                              | no xโโขxโ | _        = no (xโโขxโ โ injฦโ)
(ฦ xโ โ Mโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฦ xโ โ Mโ) โโโ tt               = no (ฮป ())
(ฦ xโ โ Mโ) โโโ โ Mโ โ           = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(ฦ xโ โ Mโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(Mโ $ Nโ) โโโ (แตแต xโ)          = no (ฮป ())
(Mโ $ Nโ) โโโ (สณแต xโ)          = no (ฮป ())
(Mโ $ Nโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(Mโ $ Nโ) โโโ (Mโ $ Nโ)        with Mโ โโโ Mโ | Nโ โโโ Nโ
...                            | yes refl | yes refl = yes refl
...                            | yes refl | no NโโขNโ = no (NโโขNโ โ inj$โ)
...                            | no MโโขMโ | _        = no (MโโขMโ โ inj$โ)
(Mโ $ Nโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(Mโ $ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ $ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ $ Nโ) โโโ tt               = no (ฮป ())
(Mโ $ Nโ) โโโ โ Mโ โ           = no (ฮป ())
(Mโ $ Nโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(Mโ $ Nโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(Mโ , Nโ) โโโ (แตแต xโ)          = no (ฮป ())
(Mโ , Nโ) โโโ (สณแต xโ)          = no (ฮป ())
(Mโ , Nโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(Mโ , Nโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(Mโ , Nโ) โโโ (Mโ , Nโ)        with Mโ โโโ Mโ | Nโ โโโ Nโ
...                            | yes refl | yes refl = yes refl
...                            | yes refl | no NโโขNโ = no (NโโขNโ โ inj,โ)
...                            | no MโโขMโ | _        = no (MโโขMโ โ inj,โ)
(Mโ , Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ , Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ , Nโ) โโโ tt               = no (ฮป ())
(Mโ , Nโ) โโโ โ Mโ โ           = no (ฮป ())
(Mโ , Nโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(Mโ , Nโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(ฯโ Mโ) โโโ (แตแต xโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (สณแต xโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (ฯโ Mโ)          with Mโ โโโ Mโ
...                          | yes refl = yes refl
...                          | no MโโขMโ = no (MโโขMโ โ injฯโ)
(ฯโ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฯโ Mโ) โโโ tt               = no (ฮป ())
(ฯโ Mโ) โโโ โ Mโ โ           = no (ฮป ())
(ฯโ Mโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(ฯโ Mโ) โโโ (แตแต xโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (สณแต xโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(ฯโ Mโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(ฯโ Mโ) โโโ (ฯโ Mโ)          with Mโ โโโ Mโ
...                          | yes refl = yes refl
...                          | no MโโขMโ = no (MโโขMโ โ injฯโ)
(ฯโ Mโ) โโโ tt               = no (ฮป ())
(ฯโ Mโ) โโโ โ Mโ โ           = no (ฮป ())
(ฯโ Mโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(ฯโ Mโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

tt โโโ (แตแต xโ)          = no (ฮป ())
tt โโโ (สณแต xโ)          = no (ฮป ())
tt โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
tt โโโ (Mโ $ Nโ)        = no (ฮป ())
tt โโโ (Mโ , Nโ)        = no (ฮป ())
tt โโโ (ฯโ Mโ)          = no (ฮป ())
tt โโโ (ฯโ Mโ)          = no (ฮป ())
tt โโโ tt               = yes refl
tt โโโ โ Mโ โ           = no (ฮป ())
tt โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
tt โโโ (Mโ โฆ Aโ)        = no (ฮป ())

โ Mโ โ โโโ (แตแต xโ)          = no (ฮป ())
โ Mโ โ โโโ (สณแต xโ)          = no (ฮป ())
โ Mโ โ โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
โ Mโ โ โโโ (Mโ $ Nโ)        = no (ฮป ())
โ Mโ โ โโโ (Mโ , Nโ)        = no (ฮป ())
โ Mโ โ โโโ (ฯโ Mโ)          = no (ฮป ())
โ Mโ โ โโโ (ฯโ Mโ)          = no (ฮป ())
โ Mโ โ โโโ tt               = no (ฮป ())
โ Mโ โ โโโ โ Mโ โ           with Mโ โโโ Mโ
...                         | yes refl = yes refl
...                         | no MโโขMโ = no (MโโขMโ โ injโโ)
โ Mโ โ โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
โ Mโ โ โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(โ Mโ โ xโ โ Nโ) โโโ (แตแต xโ)          = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (สณแต xโ)          = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ tt               = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ โ Mโ โ           = no (ฮป ())
(โ Mโ โ xโ โ Nโ) โโโ (โ Mโ โ xโ โ Nโ) with Mโ โโโ Mโ | xโ โโแตฅ xโ | Nโ โโโ Nโ
...                                   | yes refl | yes refl | yes refl = yes refl
...                                   | yes refl | yes refl | no NโโขNโ = no (NโโขNโ โ injโโโ)
...                                   | yes refl | no xโโขxโ | _        = no (xโโขxโ โ injโโโ)
...                                   | no MโโขMโ | _        | _        = no (MโโขMโ โ injโโโ)
(โ Mโ โ xโ โ Nโ) โโโ (Mโ โฆ Aโ)        = no (ฮป ())

(Mโ โฆ Aโ) โโโ (แตแต xโ)          = no (ฮป ())
(Mโ โฆ Aโ) โโโ (สณแต xโ)          = no (ฮป ())
(Mโ โฆ Aโ) โโโ (ฦ xโ โ Mโ)      = no (ฮป ())
(Mโ โฆ Aโ) โโโ (Mโ $ Nโ)        = no (ฮป ())
(Mโ โฆ Aโ) โโโ (Mโ , Nโ)        = no (ฮป ())
(Mโ โฆ Aโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ โฆ Aโ) โโโ (ฯโ Mโ)          = no (ฮป ())
(Mโ โฆ Aโ) โโโ tt               = no (ฮป ())
(Mโ โฆ Aโ) โโโ โ Mโ โ           = no (ฮป ())
(Mโ โฆ Aโ) โโโ (โ Mโ โ xโ โ Nโ) = no (ฮป ())
(Mโ โฆ Aโ) โโโ (Mโ โฆ Aโ)        with Mโ โโโ Mโ | Aโ โโโ Aโ
...                            | yes refl | yes refl = yes refl
...                            | yes refl | no AโโขAโ = no (AโโขAโ โ injโฆโ)
...                            | no MโโขMโ | _        = no (MโโขMโ โ injโฆโ)


-- Contexts
๐ : Set
๐ = List (MVar ร ๐ฏ) ร List (RVar ร ๐ฏ)


-- Syntactic entailment
infix 3 _โข_โท_
data _โข_โท_ : ๐ โ Term โ ๐ฏ โ Set
  where
    แตแต_#_  : โ {A ฮ ฮ} โ (x : MVar) (i : ฮ โ (x , A))
                       โ ฮ โ ฮ โข แตแต x โท A

    สณแต_#_  : โ {A ฮ ฮ} โ (x : RVar) (i : ฮ โ (x , A))
                       โ ฮ โ ฮ โข สณแต x โท A

    ฦ_โ_   : โ {A B M ฮ ฮ} โ (x : RVar) (๐ : ฮ โ ฮ , (x , A) โข M โท B)
                           โ ฮ โ ฮ โข ฦ x โ M โท A โ B

    _$_    : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A โ B) (โฐ : ฮ โ ฮ โข N โท A)
                             โ ฮ โ ฮ โข M $ N โท B

    _,_    : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A) (โฐ : ฮ โ ฮ โข N โท B)
                             โ ฮ โ ฮ โข M , N โท A โง B

    ฯโ     : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A โง B)
                           โ ฮ โ ฮ โข ฯโ M โท A

    ฯโ     : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A โง B)
                           โ ฮ โ ฮ โข ฯโ M โท B

    tt     : โ {ฮ ฮ} โ ฮ โ ฮ โข tt โท ๐

    โ_โ    : โ {A M ฮ ฮ} โ (๐ : ฮ โ โ โข M โท A)
                         โ ฮ โ ฮ โข โ M โ โท โก A

    โ_โ_โ_ : โ {A C M N ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท โก A) (x : MVar) (โฐ : ฮ , (x , A) โ ฮ โข N โท C)
                             โ ฮ โ ฮ โข โ M โ x โ N โท C

    _โฆ_    : โ {A M ฮ ฮ} โ (๐ : ฮ โ ฮ โข M โท A) (Aโฒ : ๐ฏ) {{_ : A โก Aโฒ}}
                         โ ฮ โ ฮ โข M โฆ A โท A


แตแต0 : โ {A ฮ ฮ} โ (x : MVar) โ ฮ , (x , A) โ ฮ โข แตแต x โท A
แตแต0 x = แตแต x # zero

แตแต1 : โ {A yB ฮ ฮ} โ (x : MVar) โ ฮ , (x , A) , yB โ ฮ โข แตแต x โท A
แตแต1 x = แตแต x # suc zero

แตแต2 : โ {A yB zC ฮ ฮ} โ (x : MVar) โ ฮ , (x , A) , yB , zC โ ฮ โข แตแต x โท A
แตแต2 x = แตแต x # suc (suc zero)


สณแต0 : โ {A ฮ ฮ} โ (x : RVar) โ ฮ โ ฮ , (x , A) โข สณแต x โท A
สณแต0 x = สณแต x # zero

สณแต1 : โ {A yB ฮ ฮ} โ (x : RVar) โ ฮ โ ฮ , (x , A) , yB โข สณแต x โท A
สณแต1 x = สณแต x # suc zero

สณแต2 : โ {A yB zC ฮ ฮ} โ (x : RVar) โ ฮ โ ฮ , (x , A) , yB , zC โข สณแต x โท A
สณแต2 x = สณแต x # suc (suc zero)


-- Normal and neutral forms
mutual
  infix 3 _โขโโ_โท_
  data _โขโโ_โท_ : ๐ โ Term โ ๐ฏ โ Set
    where
      ฦ_โ_   : โ {A B M ฮ ฮ} โ (x : RVar) (๐ : ฮ โ ฮ , (x , A) โขโโ M โท B)
                             โ ฮ โ ฮ โขโโ ฦ x โ M โท A โ B

      _,_    : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A) (โฐ : ฮ โ ฮ โขโโ N โท B)
                               โ ฮ โ ฮ โขโโ M , N โท A โง B

      tt     : โ {ฮ ฮ} โ ฮ โ ฮ โขโโ tt โท ๐

      โ_โ    : โ {A M ฮ ฮ} โ (๐ : ฮ โ โ โข M โท A)
                           โ ฮ โ ฮ โขโโ โ M โ โท โก A

      โ_โ_โ_ : โ {A C M N ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท โก A) (x : MVar) (โฐ : ฮ , (x , A) โ ฮ โขโโ N โท C)
                               โ ฮ โ ฮ โขโโ โ M โ x โ N โท C

      โฟแต     : โ {x M ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท แตแต x)
                           โ ฮ โ ฮ โขโโ M โท แตแต x

  infix 3 _โขโโ_โท_
  data _โขโโ_โท_ : ๐ โ Term โ ๐ฏ โ Set
    where
      แตแต_#_ : โ {A ฮ ฮ} โ (x : MVar) (i : ฮ โ (x , A))
                        โ ฮ โ ฮ โขโโ แตแต x โท A

      สณแต_#_ : โ {A ฮ ฮ} โ (x : RVar) (i : ฮ โ (x , A))
                        โ ฮ โ ฮ โขโโ สณแต x โท A

      _$_   : โ {A B M N ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A โ B) (โฐ : ฮ โ ฮ โขโโ N โท A)
                              โ ฮ โ ฮ โขโโ M $ N โท B

      ฯโ    : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A โง B)
                            โ ฮ โ ฮ โขโโ ฯโ M โท A

      ฯโ    : โ {A B M ฮ ฮ} โ (๐ : ฮ โ ฮ โขโโ M โท A โง B)
                            โ ฮ โ ฮ โขโโ ฯโ M โท B


mutual
  embโโ : โ {ฮ ฮ M A} โ ฮ โ ฮ โขโโ M โท A โ ฮ โ ฮ โข M โท A
  embโโ (ฦ x โ ๐)     = ฦ x โ embโโ ๐
  embโโ (๐ , โฐ)       = embโโ ๐ , embโโ โฐ
  embโโ tt            = tt
  embโโ (โ ๐ โ)       = โ ๐ โ
  embโโ (โ ๐ โ x โ โฐ) = โ embโโ ๐ โ x โ embโโ โฐ
  embโโ (โฟแต ๐)        = embโโ ๐

  embโโ : โ {ฮ ฮ M A} โ ฮ โ ฮ โขโโ M โท A โ ฮ โ ฮ โข M โท A
  embโโ (แตแต x # i) = แตแต x # i
  embโโ (สณแต x # i) = สณแต x # i
  embโโ (๐ $ โฐ)    = embโโ ๐ $ embโโ โฐ
  embโโ (ฯโ ๐)     = ฯโ (embโโ ๐)
  embโโ (ฯโ ๐)     = ฯโ (embโโ ๐)


--------------------------------------------------------------------------------
--
-- Renaming


mren : โ {ฮ ฮโฒ ฮ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โข M โท A
                      โ ฮโฒ โ ฮ โข M โท A
mren ฮท (แตแต x # i)    = แตแต x # lookupแตฃ ฮท i
mren ฮท (สณแต x # i)    = สณแต x #  i
mren ฮท (ฦ x โ ๐)     = ฦ x โ mren ฮท ๐
mren ฮท (๐ $ โฐ)       = mren ฮท ๐ $ mren ฮท โฐ
mren ฮท (๐ , โฐ)       = mren ฮท ๐ , mren ฮท โฐ
mren ฮท (ฯโ ๐)        = ฯโ (mren ฮท ๐)
mren ฮท (ฯโ ๐)        = ฯโ (mren ฮท ๐)
mren ฮท tt            = tt
mren ฮท โ ๐ โ         = โ mren ฮท ๐ โ
mren ฮท (โ ๐ โ x โ โฐ) = โ mren ฮท ๐ โ x โ mren (liftแตฃ ฮท) โฐ
mren ฮท (๐ โฆ A)       = mren ฮท ๐ โฆ A

rren : โ {ฮ ฮ ฮโฒ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โข M โท A
                      โ ฮ โ ฮโฒ โข M โท A
rren ฮท (แตแต x # i)    = แตแต x # i
rren ฮท (สณแต x # i)    = สณแต x # lookupแตฃ ฮท i
rren ฮท (ฦ x โ ๐)     = ฦ x โ rren (liftแตฃ ฮท) ๐
rren ฮท (๐ $ โฐ)       = rren ฮท ๐ $ rren ฮท โฐ
rren ฮท (๐ , โฐ)       = rren ฮท ๐ , rren ฮท โฐ
rren ฮท (ฯโ ๐)        = ฯโ (rren ฮท ๐)
rren ฮท (ฯโ ๐)        = ฯโ (rren ฮท ๐)
rren ฮท tt            = tt
rren ฮท โ ๐ โ         = โ ๐ โ
rren ฮท (โ ๐ โ x โ โฐ) = โ rren ฮท ๐ โ x โ rren ฮท โฐ
rren ฮท (๐ โฆ A)       = rren ฮท ๐ โฆ A


mutual
  mrenโโ : โ {ฮ ฮโฒ ฮ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮโฒ โ ฮ โขโโ M โท A
  mrenโโ ฮท (ฦ x โ ๐)     = ฦ x โ mrenโโ ฮท ๐
  mrenโโ ฮท (๐ , โฐ)       = mrenโโ ฮท ๐ , mrenโโ ฮท โฐ
  mrenโโ ฮท tt            = tt
  mrenโโ ฮท โ ๐ โ         = โ mren ฮท ๐ โ
  mrenโโ ฮท (โ ๐ โ x โ โฐ) = โ mrenโโ ฮท ๐ โ x โ mrenโโ (liftแตฃ ฮท) โฐ
  mrenโโ ฮท (โฟแต ๐)        = โฟแต (mrenโโ ฮท ๐)

  mrenโโ : โ {ฮ ฮโฒ ฮ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮโฒ โ ฮ โขโโ M โท A
  mrenโโ ฮท (แตแต x # i) = แตแต x # lookupแตฃ ฮท i
  mrenโโ ฮท (สณแต x # i) = สณแต x # i
  mrenโโ ฮท (๐ $ โฐ)    = mrenโโ ฮท ๐ $ mrenโโ ฮท โฐ
  mrenโโ ฮท (ฯโ ๐)     = ฯโ (mrenโโ ฮท ๐)
  mrenโโ ฮท (ฯโ ๐)     = ฯโ (mrenโโ ฮท ๐)


mutual
  rrenโโ : โ {ฮ ฮ ฮโฒ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮ โ ฮโฒ โขโโ M โท A
  rrenโโ ฮท (ฦ x โ ๐)     = ฦ x โ rrenโโ (liftแตฃ ฮท) ๐
  rrenโโ ฮท (๐ , โฐ)       = rrenโโ ฮท ๐ , rrenโโ ฮท โฐ
  rrenโโ ฮท tt            = tt
  rrenโโ ฮท โ ๐ โ         = โ ๐ โ
  rrenโโ ฮท (โ ๐ โ x โ โฐ) = โ rrenโโ ฮท ๐ โ x โ rrenโโ ฮท โฐ
  rrenโโ ฮท (โฟแต ๐)        = โฟแต (rrenโโ ฮท ๐)

  rrenโโ : โ {ฮ ฮ ฮโฒ M A} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮ โ ฮโฒ โขโโ M โท A
  rrenโโ ฮท (แตแต x # i) = แตแต x # i
  rrenโโ ฮท (สณแต x # i) = สณแต x # lookupแตฃ ฮท i
  rrenโโ ฮท (๐ $ โฐ)    = rrenโโ ฮท ๐ $ rrenโโ ฮท โฐ
  rrenโโ ฮท (ฯโ ๐)     = ฯโ (rrenโโ ฮท ๐)
  rrenโโ ฮท (ฯโ ๐)     = ฯโ (rrenโโ ฮท ๐)


renโโ : โ {ฮ ฮโฒ ฮ ฮโฒ M A} โ ฮโฒ โ ฮโฒ โยฒ ฮ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮโฒ โ ฮโฒ โขโโ M โท A
renโโ ฮท ๐ = (mrenโโ (projโ ฮท) โ rrenโโ (projโ ฮท)) ๐

renโโ : โ {ฮ ฮโฒ ฮ ฮโฒ M A} โ ฮโฒ โ ฮโฒ โยฒ ฮ โ ฮ โ ฮ โ ฮ โขโโ M โท A
                          โ ฮโฒ โ ฮโฒ โขโโ M โท A
renโโ ฮท ๐ = (mrenโโ (projโ ฮท) โ rrenโโ (projโ ฮท)) ๐


--------------------------------------------------------------------------------
--
-- Substitution


-- Simultaneous substitutions
infix 3 _โขโ_
_โขโ_ : ๐ โ List ๐ฏ โ Set
ฮ โ ฮ โขโ ฮ = All (ฮป A โ ฮฃ Term (ฮป M โ ฮ โ ฮ โข M โท A)) ฮ


mrenโ : โ {ฮ ฮโฒ ฮ ฮ} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโ ฮ
                     โ ฮโฒ โ ฮ โขโ ฮ
mrenโ ฮท ฯ = mapAll (mapฮฃ id (mren ฮท)) ฯ

rrenโ : โ {ฮ ฮ ฮโฒ ฮ} โ ฮโฒ โ ฮ โ ฮ โ ฮ โขโ ฮ
                     โ ฮ โ ฮโฒ โขโ ฮ
rrenโ ฮท ฯ = mapAll (mapฮฃ id (rren ฮท)) ฯ


mwkโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                     โ ฮ , (x , A) โ ฮ โขโ ฮ
mwkโ ฯ = mrenโ (wkแตฃ idแตฃ) ฯ

rwkโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                     โ ฮ โ ฮ , (x , A) โขโ ฮ
rwkโ ฯ = rrenโ (wkแตฃ idแตฃ) ฯ


mliftโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                       โ ฮ , (x , A) โ ฮ โขโ ฮ , A
mliftโ {x} ฯ = mwkโ ฯ , (แตแต x , (แตแต x # zero))

rliftโ : โ {x A ฮ ฮ ฮ} โ ฮ โ ฮ โขโ ฮ
                       โ ฮ โ ฮ , (x , A) โขโ ฮ , A
rliftโ {x} ฯ = rwkโ ฯ , (สณแต x , (สณแต x # zero))


midโ : โ {ฮ ฮ} โ ฮ โ ฮ โขโ map projโ ฮ
midโ {โ}     = โ
midโ {ฮ , A} = mliftโ midโ

ridโ : โ {ฮ ฮ} โ ฮ โ ฮ โขโ map projโ ฮ
ridโ {โ}     = โ
ridโ {ฮ , A} = rliftโ ridโ


lookupโ : โ {ฮ ฮ ฮ A} โ ฮ โ ฮ โขโ ฮ โ ฮ โ A
                      โ ฮฃ Term (ฮป M โ ฮ โ ฮ โข M โท A)
lookupโ ฯ i = lookupAll ฯ i


-- Substitution

msubโโ : โ {ฮ ฮ ฮ M A} โ {ฮพ : List MVar} {{p : length ฮพ โก length ฮ}}
                       โ ฮ โ โ โขโ ฮ โ zip ฮพ ฮ โ ฮ โข M โท A
                       โ Term
msubโโ ฯ (แตแต x # i)          = projโ (lookupโ ฯ (projโโ i))
msubโโ ฯ (สณแต x # i)          = สณแต x
msubโโ ฯ (ฦ x โ ๐)           = ฦ x โ msubโโ ฯ ๐
msubโโ ฯ (๐ $ โฐ)             = msubโโ ฯ ๐ $ msubโโ ฯ โฐ
msubโโ ฯ (๐ , โฐ)             = msubโโ ฯ ๐ , msubโโ ฯ โฐ
msubโโ ฯ (ฯโ ๐)              = ฯโ (msubโโ ฯ ๐)
msubโโ ฯ (ฯโ ๐)              = ฯโ (msubโโ ฯ ๐)
msubโโ ฯ tt                  = tt
msubโโ ฯ โ ๐ โ               = โ msubโโ ฯ ๐ โ
msubโโ {{p}} ฯ (โ ๐ โ x โ โฐ) = โ msubโโ ฯ ๐ โ x โ msubโโ {{foo p}} (mliftโ {x} ฯ) โฐ
msubโโ ฯ (๐ โฆ A)             = msubโโ ฯ ๐ โฆ A


msub : โ {ฮ ฮ ฮ M A} โ {ฮพ : List MVar} {{p : length ฮพ โก length ฮ}}
                     โ (ฯ : ฮ โ โ โขโ ฮ) (๐ : zip ฮพ ฮ โ ฮ โข M โท A)
                     โ ฮ โ ฮ โข msubโโ ฯ ๐ โท A
msub ฯ (แตแต x # i)          = rren infแตฃ (projโ (lookupโ ฯ (projโโ i)))
msub ฯ (สณแต x # i)          = สณแต x # i
msub ฯ (ฦ x โ ๐)           = ฦ x โ msub ฯ ๐
msub ฯ (๐ $ โฐ)             = msub ฯ ๐ $ msub ฯ โฐ
msub ฯ (๐ , โฐ)             = msub ฯ ๐ , msub ฯ โฐ
msub ฯ (ฯโ ๐)              = ฯโ (msub ฯ ๐)
msub ฯ (ฯโ ๐)              = ฯโ (msub ฯ ๐)
msub ฯ tt                  = tt
msub ฯ โ ๐ โ               = โ msub ฯ ๐ โ
msub {{p}} ฯ (โ ๐ โ x โ โฐ) = โ msub ฯ ๐ โ x โ msub {{foo p}} (mliftโ ฯ) โฐ
msub ฯ (_โฆ_ ๐ A {{refl}})  = msub ฯ ๐ โฆ A


--------------------------------------------------------------------------------
--
-- Semantics


-- Introspective Kripke models
record ๐ : Setโ where
  field
    ๐ฒ    : Set

    ๐ฑ    : ๐ฒ โ TVar โ Set

    _โฅ_  : ๐ฒ โ ๐ฒ โ Set

    idโ  : โ {w} โ w โฅ w

    _โโ_ : โ {w wโฒ wโณ} โ wโฒ โฅ w โ wโณ โฅ wโฒ
                       โ wโณ โฅ w

    accแตฅ : โ {x w wโฒ} โ wโฒ โฅ w โ ๐ฑ w x
                      โ ๐ฑ wโฒ x

    โ_โ  : ๐ฒ โ ๐

    โ_โโ : โ {w wโฒ} โ wโฒ โฅ w
                    โ โ wโฒ โ โยฒ โ w โ

open ๐ {{โฆ}} public


แตโ_โ : โ {{๐ : ๐}} โ ๐ฒ โ List (MVar ร ๐ฏ)
แตโ w โ = projโ โ w โ

สณโ_โ : โ {{๐ : ๐}} โ ๐ฒ โ List (RVar ร ๐ฏ)
สณโ w โ = projโ โ w โ

แตโ_โโ : โ {{๐ : ๐}} {w wโฒ} โ wโฒ โฅ w
                           โ แตโ wโฒ โ โ แตโ w โ
แตโ ฮท โโ = projโ โ ฮท โโ

สณโ_โโ : โ {{๐ : ๐}} {w wโฒ} โ wโฒ โฅ w
                           โ สณโ wโฒ โ โ สณโ w โ
สณโ ฮท โโ = projโ โ ฮท โโ


-- Values
mutual
  infix 3 _โฉ_
  _โฉ_ : โ {{๐ : ๐}} โ ๐ฒ โ ๐ฏ โ Set

  w โฉ แตแต x  = ๐ฑ w x

  w โฉ A โ B = โ {wโฒ} โ (ฮท : wโฒ โฅ w) (k : wโฒ แตโฉ A)
                      โ wโฒ แตโฉ B

  w โฉ A โง B = w แตโฉ A ร w แตโฉ B

  w โฉ ๐     = โค

  w โฉ โก A   = โ {wโฒ} โ (ฮท : wโฒ โฅ w)
                      โ wโฒ แตแตโฉ A

  infix 3 _แตโฉ_
  _แตโฉ_ : โ {{๐ : ๐}} โ ๐ฒ โ ๐ฏ โ Set
  w แตโฉ A = โ {wโฒ C} โ (ฮท : wโฒ โฅ w) (f : โ {wโณ} โ wโณ โฅ wโฒ โ wโณ โฉ A
                                                 โ ฮฃ Term (ฮป Mโณ โ โ wโณ โ โขโโ Mโณ โท C))
                     โ ฮฃ Term (ฮป Mโฒ โ โ wโฒ โ โขโโ Mโฒ โท C)

  infix 3 _แตแตโฉ_
  _แตแตโฉ_ : โ {{๐ : ๐}} โ ๐ฒ โ ๐ฏ โ Set
  w แตแตโฉ A = ฮฃ Term (ฮป M โ แตโ w โ โ โ โข M โท A) ร w แตโฉ A


syn : โ {{๐ : ๐}} {w A} โ w แตแตโฉ A
                        โ ฮฃ Term (ฮป M โ แตโ w โ โ โ โข M โท A)
syn M๐k = projโ M๐k

sem : โ {{๐ : ๐}} {w A} โ w แตแตโฉ A
                        โ w แตโฉ A
sem M๐k = projโ M๐k


-- Environments
infix 3 _แตโฉโ_
_แตโฉโ_ : โ {{๐ : ๐}} โ ๐ฒ โ List ๐ฏ โ Set
w แตโฉโ ฮ = All (w แตโฉ_) ฮ

infix 3 _แตแตโฉโ_
_แตแตโฉโ_ : โ {{๐ : ๐}} โ ๐ฒ โ List ๐ฏ โ Set
w แตแตโฉโ ฮ = All (w แตแตโฉ_) ฮ


synโ : โ {{๐ : ๐}} {w ฮ} โ w แตแตโฉโ ฮ
                         โ แตโ w โ โ โ โขโ ฮ
synโ mฯ = mapAll syn mฯ

semโ : โ {{๐ : ๐}} {w ฮ} โ w แตแตโฉโ ฮ
                         โ w แตโฉโ ฮ
semโ mฯ = mapAll sem mฯ


-- Semantic entailment
infix 3 _โจ_
_โจ_ : ๐ โ ๐ฏ โ Setโ
ฮ โ ฮ โจ A = โ {{๐ : ๐}} {w} โ w แตแตโฉโ map projโ ฮ โ w แตโฉโ map projโ ฮ
                             โ w แตโฉ A


-- Accessibility
mutual
  acc : โ {{๐ : ๐}} {A w wโฒ} โ wโฒ โฅ w โ w โฉ A
                             โ wโฒ โฉ A
  acc {แตแต x}  ฮท M๐ = accแตฅ ฮท M๐
  acc {A โ B} ฮท f = ฮป ฮทโฒ โ f (ฮท โโ ฮทโฒ)
  acc {A โง B} ฮท p = kacc {A} ฮท (projโ p) , kacc {B} ฮท (projโ p)
  acc {๐}     ฮท t = tt
  acc {โก A}   ฮท f = ฮป ฮทโฒ โ f (ฮท โโ ฮทโฒ)

  kacc : โ {{๐ : ๐}} {A w wโฒ} โ wโฒ โฅ w โ w แตโฉ A
                              โ wโฒ แตโฉ A
  kacc ฮท k = ฮป ฮทโฒ f โ k (ฮท โโ ฮทโฒ) f

mkacc : โ {{๐ : ๐}} {A w wโฒ} โ wโฒ โฅ w โ w แตแตโฉ A
                             โ wโฒ แตแตโฉ A
mkacc {A} ฮท (M , ๐ , k) = M , mren แตโ ฮท โโ ๐ , kacc {A} ฮท k

kaccโ : โ {{๐ : ๐}} {ฮ w wโฒ} โ wโฒ โฅ w โ w แตโฉโ ฮ
                             โ wโฒ แตโฉโ ฮ
-- TODO: Why does Agda require seemingly unused annotations here?
-- kaccโ ฮท rฯ = mapAll (kacc ฮท) rฯ
kaccโ ฮท rฯ = mapAll (ฮป {A} k {_} {_} โ kacc {A} ฮท (k {_})) rฯ

mkaccโ : โ {{๐ : ๐}} {ฮ w wโฒ} โ wโฒ โฅ w โ w แตแตโฉโ ฮ
                              โ wโฒ แตแตโฉโ ฮ
mkaccโ ฮท mฯ = mapAll (mkacc ฮท) mฯ


-- Kripke continuation monad
return : โ {{๐ : ๐}} {A w} โ w โฉ A
                           โ w แตโฉ A
return {A} a = ฮป ฮท f โ
                 f idโ (acc {A} ฮท a)

bind : โ {{๐ : ๐}} {A C w} โ w แตโฉ A โ (โ {wโฒ} โ wโฒ โฅ w โ wโฒ โฉ A
                                                 โ wโฒ แตโฉ C)
                           โ w แตโฉ C
bind k f = ฮป ฮท fโฒ โ
             k ฮท (ฮป ฮทโฒ a โ
               f (ฮท โโ ฮทโฒ) a idโ (ฮป ฮทโณ b โ
                 fโฒ (ฮทโฒ โโ ฮทโณ) b))


klookupโ : โ {{๐ : ๐}} {ฮ A w} โ w แตโฉโ ฮ โ ฮ โ A
                               โ w แตโฉ A
klookupโ rฯ i = lookupAll rฯ i


kฦ : โ {{๐ : ๐}} {A B w} โ (โ {wโฒ} โ wโฒ โฅ w โ wโฒ แตโฉ A
                                    โ wโฒ แตโฉ B)
                         โ w แตโฉ A โ B
kฦ {A} {B} f = return {A โ B} (ฮป ฮท k โ f ฮท k)

k$ : โ {{๐ : ๐}} {A B w} โ w แตโฉ A โ B โ w แตโฉ A
                         โ w แตโฉ B
k$ {A} {B} kโ kโ = bind {A โ B} {B} kโ (ฮป ฮท f โ f idโ (kacc {A} ฮท kโ))

k, : โ {{๐ : ๐}} {A B w} โ w แตโฉ A โ w แตโฉ B
                         โ w แตโฉ A โง B
k, {A} {B} kโ kโ = return {A โง B} (kโ , kโ)

kฯโ : โ {{๐ : ๐}} {A B w} โ w แตโฉ A โง B
                          โ w แตโฉ A
kฯโ {A} {B} k = bind {A โง B} {A} k (ฮป ฮท p โ projโ p)

kฯโ : โ {{๐ : ๐}} {A B w} โ w แตโฉ A โง B
                          โ w แตโฉ B
kฯโ {A} {B} k = bind {A โง B} {B} k (ฮป ฮท p โ projโ p)

ktt : โ {{๐ : ๐}} {w} โ w แตโฉ ๐
ktt = return {๐} tt

kโโ : โ {{๐ : ๐}} {A w} โ (โ {wโฒ} โ wโฒ โฅ w
                                   โ wโฒ แตแตโฉ A)
                        โ w แตโฉ โก A
kโโ {A} f = return {โก A} (ฮป ฮท โ f ฮท)

kโโ : โ {{๐ : ๐}} {A C w} โ w แตโฉ โก A
                          โ (โ {wโฒ} โ wโฒ โฅ w โ wโฒ แตแตโฉ A
                                     โ wโฒ แตโฉ C)
                          โ w แตโฉ C
kโโ {A} {C} k f = bind {โก A} {C} k (ฮป ฮท fโฒ โ f ฮท (fโฒ idโ))


-- -- Soundness
-- โ : โ {ฮ ฮ M A} โ ฮ โ ฮ โข M โท A
--                 โ ฮ โ ฮ โจ A
-- โ (แตแต x # i)             mฯ rฯ = klookupโ (semโ mฯ) (projโโ i)
-- โ (สณแต x # i)             mฯ rฯ = klookupโ rฯ (projโโ i)
-- โ (ฦ_โ_ {A} {B} x ๐)     mฯ rฯ = kฦ {A} {B} (ฮป ฮท k โ
--                                    โ ๐ (mkaccโ ฮท mฯ) (kaccโ ฮท rฯ , k))
-- โ (_$_ {A} {B} ๐ โฐ)      mฯ rฯ = k$ {A} {B} (โ ๐ mฯ rฯ) (โ โฐ mฯ rฯ)
-- โ (_,_ {A} {B} ๐ โฐ)      mฯ rฯ = k, {A} {B} (โ ๐ mฯ rฯ) (โ โฐ mฯ rฯ)
-- โ (ฯโ_ {A} {B} ๐)        mฯ rฯ = kฯโ {A} {B} (โ ๐ mฯ rฯ)
-- โ (ฯโ_ {A} {B} ๐)        mฯ rฯ = kฯโ {A} {B} (โ ๐ mฯ rฯ)
-- โ tt                     mฯ rฯ = ktt
-- โ {ฮ} (โ_โ {A} {M} ๐)    mฯ rฯ rewrite lemโ ฮ โปยน
--                                = kโโ {A} (ฮป ฮท โ
--                                    msubโโ {ฮพ = map projโ ฮ} (synโ (mkaccโ ฮท mฯ)) ๐
--                                  , msub {ฮพ = map projโ ฮ} (synโ (mkaccโ ฮท mฯ)) ๐
--                                  , โ ๐ (mkaccโ ฮท mฯ) โ)
-- โ (โ_โ_โ_ {A} {C} ๐ x โฐ) mฯ rฯ = kโโ {A} {C} (โ ๐ mฯ rฯ) (ฮป ฮท M๐k โ
--                                    โ โฐ (mkaccโ ฮท mฯ , M๐k) (kaccโ ฮท rฯ))


-- Soundness, inlined
โ : โ {ฮ ฮ M A} โ ฮ โ ฮ โข M โท A
                โ ฮ โ ฮ โจ A
โ (แตแต x # i)             mฯ rฯ = klookupโ (semโ mฯ) (projโโ i)
โ (สณแต x # i)             mฯ rฯ = klookupโ rฯ (projโโ i)
โ (ฦ_โ_ {A} {B} x ๐)     mฯ rฯ = return {A โ B} (ฮป ฮท k โ
                                   โ ๐ (mkaccโ ฮท mฯ) (kaccโ ฮท rฯ , k))
โ (_$_ {A} {B} ๐ โฐ)      mฯ rฯ = bind {A โ B} {B} (โ ๐ mฯ rฯ) (ฮป ฮท f โ
                                   f idโ (โ โฐ (mkaccโ ฮท mฯ) (kaccโ ฮท rฯ)))
โ (_,_ {A} {B} ๐ โฐ)      mฯ rฯ = return {A โง B} (โ ๐ mฯ rฯ , โ โฐ mฯ rฯ)
โ (ฯโ {A} {B} ๐)         mฯ rฯ = bind {A โง B} {A} (โ ๐ mฯ rฯ) (ฮป ฮท p โ projโ p)
โ (ฯโ {A} {B} ๐)         mฯ rฯ = bind {A โง B} {B} (โ ๐ mฯ rฯ) (ฮป ฮท p โ projโ p)
โ tt                     mฯ rฯ = return {๐} tt
โ {ฮ} (โ_โ {A} {M} ๐)    mฯ rฯ rewrite lemโ ฮ โปยน
                               = return {โก A} (ฮป ฮท โ
                                   msubโโ {ฮพ = map projโ ฮ} (synโ (mkaccโ ฮท mฯ)) ๐
                                 , msub {ฮพ = map projโ ฮ} (synโ (mkaccโ ฮท mฯ)) ๐
                                 , โ ๐ (mkaccโ ฮท mฯ) โ)
โ (โ_โ_โ_ {A} {C} ๐ x โฐ) mฯ rฯ = bind {โก A} {C} (โ ๐ mฯ rฯ) (ฮป ฮท f โ
                                   โ โฐ (mkaccโ ฮท mฯ , f idโ) (kaccโ ฮท rฯ))
โ (_โฆ_ ๐ A {{refl}})     mฯ rฯ = bind {A} {A} (โ ๐ mฯ rฯ) (ฮป ฮท a โ
                                   return {A} a)


--------------------------------------------------------------------------------
--
-- Completeness


-- Canonical model
instance
  ๐แถ : ๐
  ๐แถ = record
         { ๐ฒ    = ๐
         ; ๐ฑ    = ฮป { (ฮ โ ฮ) x โ ฮฃ Term (ฮป M โ ฮ โ ฮ โขโโ M โท แตแต x ) }
         ; _โฅ_  = _โยฒ_
         ; idโ  = idแตฃแตฃ
         ; _โโ_ = _โแตฃแตฃ_
         ; accแตฅ = ฮป { ฮท (M , ๐) โ M , renโโ ฮท ๐ }
         ; โ_โ  = id
         ; โ_โโ = id
         }


-- Canonical soundness and completeness

-- TODO: Generate fresh names!
mutual
  โแถ : โ {A ฮ ฮ} โ ฮ โ ฮ แตโฉ A
                 โ ฮฃ Term (ฮป M โ ฮ โ ฮ โขโโ M โท A)
  โแถ {แตแต x}  k = k idแตฃแตฃ (ฮป ฮท M๐ โ M๐)
  โแถ {A โ B} k = k idแตฃแตฃ (ฮป ฮท f โ let M , ๐ = โแถ (f (rwkแตฃแตฃ idแตฃแตฃ) (โแถ (สณแต "RFRESH" # zero))) in
                                  ฦ "RFRESH" โ M , ฦ "RFRESH" โ ๐)
  โแถ {A โง B} k = k idแตฃแตฃ (ฮป ฮท p โ let M , ๐ = โแถ (projโ p) in
                                  let N , โฐ = โแถ (projโ p) in
                                  (M , N) , (๐ , โฐ))
  โแถ {๐}     k = k idแตฃแตฃ (ฮป ฮท t โ tt , tt)
  โแถ {โก A}   k = k idแตฃแตฃ (ฮป ฮท f โ let M , ๐ = syn (f idแตฃแตฃ) in
                                  โ M โ , โ ๐ โ)

  โแถ : โ {A M ฮ ฮ} โ ฮ โ ฮ โขโโ M โท A
                   โ ฮ โ ฮ แตโฉ A
  โแถ {แตแต x}  {M} ๐ = return {แตแต x} (M , โฟแต ๐)
  โแถ {A โ B} {M} ๐ = return {A โ B} (ฮป ฮท k โ โแถ (renโโ ฮท ๐ $ projโ (โแถ k)))
  โแถ {A โง B} {M} ๐ = return {A โง B} (โแถ (ฯโ ๐) , โแถ (ฯโ ๐))
  โแถ {๐ }    {M} ๐ = return {๐} tt
  โแถ {โก A}   {M} ๐ {_} {C} = ฮป ฮท f โ
                         let N , โฐ = f (mwkแตฃแตฃ idแตฃแตฃ) ฮป ฮทโฒ โ
                                       แตแต "MFRESH"
                                     , (แตแต "MFRESH" # mlookupแตฃแตฃ ฮทโฒ zero)
                                     , โแถ (แตแต "MFRESH" # mlookupแตฃแตฃ ฮทโฒ zero) in
                         โ M โ "MFRESH" โ N , โ renโโ ฮท ๐ โ "MFRESH" โ โฐ


mkidโ : โ {ฮ ฮ} โ ฮ โ ฮ แตแตโฉโ map projโ ฮ
mkidโ {โ}           = โ
mkidโ {ฮ , (x , A)} = mkaccโ (mwkแตฃแตฃ idแตฃแตฃ) mkidโ , (แตแต x , (แตแต x # zero) , โแถ (แตแต x # zero))

kidโ : โ {ฮ ฮ} โ ฮ โ ฮ แตโฉโ map projโ ฮ
kidโ {โ}           = โ
kidโ {ฮ , (x , A)} = kaccโ (rwkแตฃแตฃ idแตฃแตฃ) kidโ , โแถ (สณแต x # zero)


-- Completeness
โ : โ {ฮ ฮ A} โ ฮ โ ฮ โจ A
              โ ฮฃ Term (ฮป M โ ฮ โ ฮ โขโโ M โท A)
โ ๐ = โแถ (๐ mkidโ kidโ)


-- Normalisation
nf : โ {ฮ ฮ M A} โ ฮ โ ฮ โข M โท A
                 โ ฮฃ Term (ฮป Mโฒ โ ฮ โ ฮ โขโโ Mโฒ โท A)
nf = โ โ โ


--------------------------------------------------------------------------------
--
-- Examples


axI : โ {A ฮ ฮ}
    โ ฮ โ ฮ โข ฦ "x" โ สณแต "x"
             โท A โ A
axI = ฦ "x" โ สณแต0 "x"

axK : โ {A B ฮ ฮ}
    โ ฮ โ ฮ โข ฦ "x" โ (ฦ "y" โ สณแต "x")
             โท A โ B โ A
axK = ฦ "x" โ (ฦ "y" โ สณแต1 "x")

axS : โ {A B C ฮ ฮ}
    โ ฮ โ ฮ โข ฦ "f" โ (ฦ "g" โ (ฦ "x" โ
                  ((สณแต "f" $ สณแต "x") $ (สณแต "g" $ สณแต "x"))))
             โท (A โ B โ C) โ (A โ B) โ A โ C
axS = ฦ "f" โ (ฦ "g" โ (ฦ "x" โ
        ((สณแต2 "f" $ สณแต0 "x" ) $ (สณแต1 "g" $ สณแต0 "x"))))


axD : โ {A B ฮ ฮ}
    โ ฮ โ ฮ โข ฦ "'f" โ (ฦ "'x" โ
                  (โ สณแต "'f" โ "f" โ (โ สณแต "'x" โ "x" โ
                    (โ แตแต "f" $ แตแต "x" โ))))
             โท โก (A โ B) โ โก A โ โก B
axD = ฦ "'f" โ (ฦ "'x" โ
        (โ สณแต1 "'f" โ "f" โ (โ สณแต0 "'x" โ "x" โ
          (โ แตแต1 "f" $ แตแต0 "x" โ))))

axT : โ {A ฮ ฮ}
    โ ฮ โ ฮ โข ฦ "'x" โ (โ สณแต "'x" โ "x" โ (แตแต "x"))
             โท โก A โ A
axT = ฦ "'x" โ (โ สณแต0 "'x" โ "x" โ (แตแต0 "x"))

ax4 : โ {A ฮ ฮ}
    โ ฮ โ ฮ โข ฦ "'x" โ (โ สณแต "'x" โ "x" โ (โ โ แตแต "x" โ โ))
             โท โก A โ โก โก A
ax4 = ฦ "'x" โ (โ สณแต0 "'x" โ "x" โ (โ โ แตแต0 "x" โ โ))


--------------------------------------------------------------------------------
--
-- Conversion tests


testโผ : โ {ฮ ฮ Mโ Mโ A} โ ฮ โ ฮ โข Mโ โท A โ ฮ โ ฮ โข Mโ โท A โ Set
testโผ {Mโ = Mโ} ๐โ ๐โ with nf ๐โ
testโผ {Mโ = Mโ} ๐โ ๐โ | Mโโฒ , ๐โโฒ with Mโโฒ โโโ Mโ
testโผ {Mโ = Mโ} ๐โ ๐โ | .Mโ , ๐โโฒ | yes refl  = embโโ ๐โโฒ โก ๐โ
testโผ {Mโ = Mโ} ๐โ ๐โ | Mโโฒ , ๐โโฒ | no MโโฒโขMโ = โฅ


-- redโ : โ {ฮ ฮ A B} โ (M : ฮ โ ฮ , A โข B) (N : ฮ โ ฮ โข A)
--                     โ ฦ M $ N โผ rsub (ridโ , N) M

testโผredโ : testโผ {โ} {โ , ("x" , "A")}
                  ((ฦ "y" โ สณแต0 "y") $ สณแต0 "x")
                  (สณแต0 "x")
testโผredโ = refl


-- redโงโ : โ {ฮ ฮ A B} โ (M : ฮ โ ฮ โข A) (N : ฮ โ ฮ โข B)
--                     โ ฯโ (M , N) โผ M

testโผredโงโ : testโผ {โ} {โ , ("x" , "A") , ("y" , "B")}
                   (ฯโ (สณแต1 "x" , สณแต0 "y"))
                   (สณแต1 "x")
testโผredโงโ = refl


-- redโงโ : โ {ฮ ฮ A B} โ (M : ฮ โ ฮ โข A) (N : ฮ โ ฮ โข B)
--                     โ ฯโ (M , N) โผ N

testโผredโงโ : testโผ {โ} {โ , ("x" , "A") , ("y" , "B")}
                   (ฯโ (สณแต1 "x" , สณแต0 "y"))
                   (สณแต0 "y")
testโผredโงโ = refl


-- redโก : โ {ฮ ฮ A C} โ (M : ฮ โ โ โข A) (N : ฮ , A โ ฮ โข C)
--                    โ โ โ M โ โ N โผ msub (midโ , M) N

testโผredโก : testโผ {โ , ("x" , "A")} {โ}
                  (โ โ แตแต0 "x" โ โ "y" โ แตแต0 "y")
                  (แตแต0 "x")
testโผredโก = refl


-- expโ : โ {ฮ ฮ A B} โ (M : ฮ โ ฮ โข A โ B)
--                     โ M โผ ฦ (ren (wkแตฃ idแตฃ) M $ แต0)

testโผexpโ : testโผ {โ} {โ , ("f" , "A" โ "B")}
                  (สณแต0 "f")
                  (ฦ "RFRESH" โ (rren (wkแตฃ idแตฃ) (สณแต0 "f") $ สณแต0 "RFRESH"))
testโผexpโ = refl


-- expโง : โ {ฮ ฮ A B} โ (M : ฮ โ ฮ โข A โง B)
--                    โ M โผ ฯโ M , ฯโ M

testโผexpโง : testโผ {โ} {โ , ("x" , "A" โง "B")}
                  (สณแต0 "x")
                  (ฯโ (สณแต0 "x") , ฯโ (สณแต0 "x"))
testโผexpโง = refl


-- exp๐ : โ {ฮ ฮ} โ (M : ฮ โ ฮ โข ๐)
--                 โ M โผ tt

testโผexp๐ : testโผ {โ} {โ , ("x" , ๐)}
                  (สณแต0 "x")
                  tt
testโผexp๐ = refl


-- expโก : โ {ฮ ฮ} โ (M : ฮ โ ฮ โข โก A)
--                โ M โผ โ M โ โ แตแต0 โ

testโผexpโก : testโผ {โ} {โ , ("'x" , โก "A")}
                  (สณแต0 "'x")
                  (โ สณแต0 "'x" โ "MFRESH" โ โ แตแต0 "MFRESH" โ)
testโผexpโก = refl


-- commโก$ : โ {ฮ ฮ A B X} โ (K : ฮ โ ฮ โข โก X)
--                           (M : ฮ , X โ ฮ โข A โ B) (N : ฮ โ ฮ โข A)
--                        โ (โ K โ M) $ N โผ โ K โ (M $ (mren (wkแตฃ idแตฃ) N))

testโผcommโก$ : testโผ {โ} {โ , ("'f" , โก ("A" โ "B")) , ("x" , "A")}
                    ((โ สณแต1 "'f" โ "f" โ แตแต0 "f") $ สณแต0 "x")
                    (โ สณแต1 "'f" โ "MFRESH" โ (แตแต0 "MFRESH" $ mren (wkแตฃ idแตฃ) (สณแต0 "x")))
testโผcommโก$ = refl


-- commโกโโ : โ {ฮ ฮ A C X} โ (K : ฮ โ ฮ โข โก X)
--                            (M : ฮ , X โ ฮ โข โก A) (N : ฮ , A โ ฮ โข C)
--                         โ โ (โ K โ M) โ N โผ โ K โ (โ M โ (mren (wkแตฃ idแตฃ) N))

testโผcommโกโโ : testโผ {โ} {โ , ("''x" , โก โก "A")}
                     (โ โ สณแต0 "''x" โ "'x" โ แตแต0 "'x" โ "x" โ แตแต0 "x")
                     (โ สณแต0 "''x" โ "MFRESH" โ โ แตแต0 "MFRESH" โ "MFRESH" โ แตแต0 "MFRESH")  -- TODO: Generate fresh names!
testโผcommโกโโ = refl


-- commโกฯโ : โ {ฮ ฮ A B X} โ (K : ฮ โ ฮ โข โก X)
--                            (M : ฮ , X โ ฮ โข A โง B)
--                         โ ฯโ (โ K โ M) โผ โ K โ (ฯโ M)

testโผcommโกฯโ : testโผ {โ} {โ , ("'x" , โก ("A" โง "B"))}
                     (ฯโ (โ สณแต0 "'x" โ "x" โ แตแต0 "x"))
                     (โ สณแต0 "'x" โ "MFRESH" โ ฯโ (แตแต0 "MFRESH"))
testโผcommโกฯโ = refl


-- commโกฯโ : โ {ฮ ฮ A B X} โ (K : ฮ โ ฮ โข โก X)
--                            (M : ฮ , X โ ฮ โข A โง B)
--                         โ ฯโ (โ K โ M) โผ โ K โ (ฯโ M)

testโผcommโกฯโ : testโผ {โ} {โ , ("'x" , โก ("A" โง "B"))}
                     (ฯโ (โ สณแต0 "'x" โ "x" โ แตแต0 "x"))
                     (โ สณแต0 "'x" โ "MFRESH" โ ฯโ (แตแต0 "MFRESH"))
testโผcommโกฯโ = refl


--------------------------------------------------------------------------------
--
-- Self-interpretation


-- weakBP : โ {ฮ ฮ A B} โ (M : ฮ โ ฮ โข A)
--                      โ ๐ $ โ M โ โผ โ M โ

testโผweakBP : testโผ {โ , ("x" , "A")} {โ}
                    (axT $ โ แตแต0 "x" โ)
                    (แตแต0 "x")
testโผweakBP = refl


-- Andrej : โ {ฮ ฮ A B} โ (M : ฮ โ ฮ โข A โ B) (N : ฮ โ ฮ โข A)
--                      โ (๐ป $ โ M โ) $ โ N โ โผ โ M $ N โ

testโผAndrej : testโผ {โ , ("f" , "A" โ "B") , ("x" , "A")} {โ}
                    ((axD $ โ แตแต1 "f" โ) $ โ แตแต0 "x" โ)
                    (โ แตแต1 "f" $ แตแต0 "x" โ)
testโผAndrej = refl


--------------------------------------------------------------------------------
